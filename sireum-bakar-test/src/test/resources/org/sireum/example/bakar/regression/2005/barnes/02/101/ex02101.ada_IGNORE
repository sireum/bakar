--# inherit Stacks;
package Go_Between
--# own State;
is
   procedure Clear;
   --# global out State;
   --# derives State from;

   procedure Use_Stack;
   --# global in out State;
   --# derives State from State;
end Go_Between;

with Stacks;
package body Go_Between is
   State : Stacks.Stack;

   procedure Clear is
   begin
      Stacks.Clear(State);
   end Clear;

   procedure Use_Stack is
      Unused : Integer;
      begin
         Stacks.Push(State,34);
         Stacks.Pop(State,Unused);  -- ineffective assign
      end Use_Stack; -- Unused not used or exported
end Go_Between;

with Go_Between;
--# inherit Stacks, Go_Between;
--# main_program;
procedure Main
  --# global  out Go_Between.State;
  --# derives Go_Between.State from;
is
begin
   Go_Between.Clear;
   Go_Between.Use_Stack;
end Main;
