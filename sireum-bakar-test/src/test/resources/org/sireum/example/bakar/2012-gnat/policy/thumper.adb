
package body Thumper is
   -- reference: https://github.com/pchapin/thumper/blob/master/doc/Theory.xml
   
   -- The time stamp protocol begins when Alice wants to be able to prove later that one of
   -- her documents existed at (or before) the current time. She first computes a cryptographic
   -- hash of the document using a suitable secure hash algorithm. She then presents this hash
   -- to a trusted third party time stamping server. The server appends the current time to the
   -- end of the hash, signs the resulting data to make the official time stamp, and returns the
   -- time stamp to Alice. Alice keeps the time stamp with the document.</para>

   -- To verify the time stamp a person need only verify the signature of the time stamp
   -- server and then verify that the document has the same hash as that stored in the time
   -- stamp.   
   
   -- Vulnerabilities
   -- (1) make sure the safety of the private key
   
   -- make sure the absence of “information leak” for private key that: the server never transmits
   -- any information pertaining to the private key except for the signatures generated by it.   
   
   
   procedure Tick(Time: in out Integer) is   
   begin
      Time := Time + 1; -- simulate the clock;
   end Tick;
   
   procedure AppendTime(U: in Integer; V: out Integer)
   is begin
      Tick(Time);
      V := U + Time; -- simulate to append time to U
   end AppendTime;
   
   procedure Sign(Data: in Integer; Signature: out Integer)
   is begin
      Signature := Data * Key; -- simulate the signature
   end Sign;
   
   procedure MakeSignature(Data: in Integer; 
			   Signature: out Integer) is
      DataWithTime: Integer;
   begin
      AppendTime(Data, DataWithTime);
      Sign(DataWithTime, Signature);
   end MakeSignature;   
      
   procedure Hash(X: in Integer; Y: out Integer) is
   begin
      Y := X mod 100; -- simulate the hash function
   end Hash;   
   
   -- main --
   procedure MainProc is
      HashValue: Integer;
   begin
      -- safe --
      Hash(Document, HashValue);
      MakeSignature(HashValue, DocSignature);

      -- unsafe --
      -- Hash(TopKey, HashValue);
      -- MakeSignature(HashValue, Time);
      
   end MainProc;
   
end Thumper;
