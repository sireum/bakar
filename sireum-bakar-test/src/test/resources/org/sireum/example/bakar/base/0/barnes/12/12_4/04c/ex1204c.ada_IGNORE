-- Use of child packages to encapsulate state
package Power
--# own in State;
is
   procedure Read_Power(Level : out Integer);
   --# global in State;
   --# derives Level from State;
end Power;

private package Power.Voltage
--# own in State;
is
   procedure Read(Level : out Integer);
   --# global in State;
   --# derives Level from State;
end Power.Voltage;

private package Power.Current
--# own in State;
is
   procedure Read(Level : out Integer);
   --# global in State;
   --# derives Level from State;
end Power.Current;

private package Power.Phase
--# own in State;
is
   procedure Read(Level : out Integer);
   --# global in State;
   --# derives Level from State;
end Power.Phase;

with Power.Voltage, Power.Current, Power.Phase;
package body Power
--# own State is in Power.Voltage.State,
--#              in Power.Current.State,
--#              in Power.Phase.State;
is

  procedure Read_Power(Level : out Integer)
  --# global in Voltage.State, Current.State,Phase.State;
  --# derives
  --#     Level
  --#     from
  --#         Voltage.State,
  --#         Current.State,
  --#         Phase.State;
  is
     --# hide Read_Power;
  begin
     null;
  end Read_Power;

end Power;
