package ArrayTests
is
  
  type Index is range 0 .. 10;
  type ArrayType is array(Index) of Integer;
  
  function dummy return Integer;
  
end ArrayTests;

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

package body ArrayTests
is

  function dummy return Integer is
  begin
    return 1;
  end dummy;
  
  ------------------------------------------------------------------------------
  ------------------------------------------------------------------------------
  procedure t_SA_L1_1(A : in out ArrayType; Result : out Integer)
  --# derives A from A & Result from A;
  is
  begin
    A(0) := 1;
    Result := A(0);
  end t_SA_L1_1;
  
  ------------------------------------------------------------------------------
  ------------------------------------------------------------------------------  
  procedure t_SA_L2(A : in out ArrayType; I, J : in Index; Result : out Integer)
  --# derives A from A, I & 
  --#         Result from A, I, J;
  is
  begin
    A(I) := 2;
    Result := A(J);
  end t_SA_L2;
  
  ------------------------------------------------------------------------------
  ------------------------------------------------------------------------------  
  function t_SA_L3 (A : ArrayType; I : Index) return Integer is
  begin
    return A(I);
  end t_SA_L3;
  
  ------------------------------------------------------------------------------
  ------------------------------------------------------------------------------  
  function t_SA_CE (A : ArrayType; I : Index) return Integer is
  begin
    return A(I - 1) + A(I + 1);
  end t_SA_CE;
  
  ------------------------------------------------------------------------------
  ------------------------------------------------------------------------------  
  procedure t_SA_U_1 (A : in out ArrayType)
  --# derives A from A; 
  --# post A = A~[1 => 0];
  is
  begin
    A(1) := 0;
  end t_SA_U_1;
  
  ------------------------------------------------------------------------------
  ------------------------------------------------------------------------------  
  procedure t_SA_U_2 (A : in out ArrayType; I : Index)
  --# derives A from A, I; 
  --# post A = A~[I => 0];
  is
  begin
    A(I) := 0;
  end t_SA_U_2;
  
  ------------------------------------------------------------------------------
  ------------------------------------------------------------------------------  
  procedure t_SA_U_3 (A : in out ArrayType; I, J : Index)
  --# derives A from A, I, J;
  --# pre for all Z in Index range Index'First .. Index'Last - 1 => (A(Z) < A(Z + 1)); 
  --# post A = A~[I => A~(J); J => A~(I)];
  is
    Temp : Integer;
  begin
    Temp := A(I);
    A(I) := A(J);
    A(J) := Temp; 
  end t_SA_U_3;  
end ArrayTests;