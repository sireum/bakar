package The_Stack
  --# own State;
  --# initializes State;
is
   procedure Push(X : in Integer);
   --# global in out State;
   --# derives State from State, X;

   procedure Pop(X : out Integer);
   --# global in out State;
   --# derives State, X from State;
end The_Stack;

--# inherit The_Stack;
package Go_Between is
   procedure Use_Stack;
   --# global in out The_Stack.State;
   --# derives The_Stack.State from The_Stack.State;
end Go_Between;

with The_Stack;
package body Go_Between is
   procedure Use_Stack is
      Unused : Integer;
      begin
         The_Stack.Push(34);
         The_Stack.Pop(Unused);  -- ineffective assign
      end Use_Stack; -- Unused not used or exported
end Go_Between;

with Go_Between;
--# inherit The_Stack, Go_Between;
--# main_program;
procedure Main
  --# global in out The_Stack.State;
  --# derives The_Stack.State from The_Stack.State;
is
begin
   Go_Between.Use_Stack;
end Main;





