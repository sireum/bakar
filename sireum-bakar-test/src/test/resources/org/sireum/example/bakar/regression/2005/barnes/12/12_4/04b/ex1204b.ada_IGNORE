-- Use of embedded packages to encapsulate state
package Power
--# own in State;
is

   procedure Read_Power(Level : out Integer);
   --# global in State;
   --# derives Level from State;

end Power;

package body Power
  --# own State is in Voltage.State,
  --#              in Current.State,
  --#              in Phase.State;
is

   package Voltage
   --# own in State;
   is
     procedure Read(Level : out Integer);
     --# global in State;
     --# derives Level from State;
   end Voltage;


  package Current
  --# own in State;
  is
     procedure Read(Level : out Integer);
     --# global in State;
     --# derives Level from State;
  end Current;

  package Phase
  --# own in State;
  is
     procedure Read(Level : out Integer);
     --# global in State;
     --# derives Level from State;
  end Phase;

  package body Voltage is separate;
  package body Current is separate;
  package body Phase   is separate;

  procedure Read_Power(Level : out Integer)
    --# global in Voltage.State, Current.State,Phase.State;
    --# derives
    --#     Level
    --#     from
    --#         Voltage.State,
    --#         Current.State,
    --#         Phase.State;
  is
     --# hide Read_Power;
  begin
     null;
  end Read_Power;

end Power; -- package bodies omitted for brevity
