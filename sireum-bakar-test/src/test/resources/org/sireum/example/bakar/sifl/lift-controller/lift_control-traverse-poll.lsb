          *******************************************************
                           Listing of SPARK Text
       SPARK95 Examiner with VC and RTC Generator Release 7.4 / 01.07
                           Demonstration Version
          *******************************************************


                       DATE : 18-DEC-2008 19:19:32.74

Line
   1  
   2  
   3  with Building; use type Building.Floor_Type;
   4  separate (Lift_Control.Traverse)
   5  procedure Poll(Direction: in Building.Direction_Type;
   6                 Lift_Called: out Boolean;
   7                 Next_Stop: out Building.Floor_Type) is
   8  
   9     Requested: Boolean;
  10     Final_Floor, Inspected_Floor: Building.Floor_Type;
  11     Reverse_Direction: Building.Direction_Type;
  12  
  13     function Next_Floor(Current_Floor: Building.Floor_Type;
  14                         Direction: Building.Direction_Type)
  15                         return Building.Floor_Type
  16     is
  17        Next_Floor_Value: Building.Floor_Type;
  18     begin   -- Next_Floor;
  19        case Direction is
  20           when Building.Up =>
  21              Next_Floor_Value := Building.Floor_Type'Succ(Current_Floor);
  22           when Building.Down =>
  23              Next_Floor_Value := Building.Floor_Type'Pred(Current_Floor);
  24        end case;
  25        return Next_Floor_Value;
  26     end Next_Floor;

+++        Flow analysis of subprogram Next_Floor 
           performed: no errors found.

  27  
  28  begin   -- Poll
  29     case Direction is
  30        when Building.Up =>
  31           Final_Floor := Building.Floor_Type'Last;
  32           Reverse_Direction := Building.Down;
  33        when Building.Down =>
  34           Final_Floor := Building.Floor_Type'First;
  35           Reverse_Direction := Building.Up;
  36     end case;
  37     Requested := False;
  38     Inspected_Floor := Lift.Present_Floor;
  39     loop
  40        exit when Inspected_Floor = Final_Floor;
  41        Inspected_Floor := Next_Floor(Inspected_Floor, Direction);
  42        Buttons.Inspect_Floor_Button(Direction,
  43                                     Inspected_Floor, Requested);
  44        exit when Requested;
  45        Buttons.Inspect_Lift_Button(Inspected_Floor, Requested);
  46        exit when Requested;
  47     end loop;
  48     if not Requested then
  49        loop
  50           exit when Inspected_Floor = Lift.Present_Floor;
  51           Buttons.Inspect_Floor_Button(Reverse_Direction,
  52                                        Inspected_Floor, Requested);
  53           exit when Requested;
  54           Inspected_Floor := Next_Floor(Inspected_Floor,
  55                                         Reverse_Direction);
  56        end loop;
  57     end if;
  58     Lift_Called := Requested;
  59     Next_Stop := Inspected_Floor;
  60  end Poll;

+++        Flow analysis of subprogram Poll performed: no 
           errors found.

  61  
  62  


--End of file--------------------------------------------------
