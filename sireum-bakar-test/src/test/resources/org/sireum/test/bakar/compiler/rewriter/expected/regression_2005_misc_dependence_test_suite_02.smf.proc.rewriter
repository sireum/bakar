package Dependence_Test_Suite_02;


procedure Success0 (
        Integer O) {

  #l0.
    O := 5ii;

  #l1.
    return (O);
}

procedure Success1 (
        Integer I,
        Integer O) {

  #l2.
    O := I;

  #l3.
    return (O);
}

procedure Success2 (
        Integer I,
        Integer O) {
  local
    Integer L;


  #l4.
    L := I;

  #l5.
    O := L;

  #l6.
    return (O);
}

procedure Success3 (
        Integer I,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    Integer L3;


  #l7.
    L1 := I;

  #l8.
    L2 := L1;

  #l9.
    L3 := L2;

  #l10.
    O := L3;

  #l11.
    return (O);
}

procedure Success4 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    Integer L3;


  #l12.
    L1 := I1;

  #l13.
    L2 := I2;

  #l14.
    L3 := L1 + L2;

  #l15.
    O := L3;

  #l16.
    return (O);
}

procedure Success5 (
        Integer I1,
        Integer I2,
        Integer O1,
        Integer O2) {
  local
    Integer L1;
    Integer L2;
    Integer L3;


  #l17.
    O1 := I2;

  #l18.
    L1 := I1;

  #l19.
    L2 := L1;

  #l20.
    L3 := L1 + L2;

  #l21.
    O2 := O1;

  #l22.
    O1 := L3;

  #l23.
    return (O1, O2);
}

procedure Success6 (
        Integer I1,
        Integer I2,
        Integer O1,
        Integer O2) {

  #l24.
    O1 := I1;

  #l27.
    if !(I2 > 5ii) then goto l26;

  #l28.
    O2 := 5ii;

  #l29.
    goto l25;

  #l26.
    // empty loc

  #l30.
    O2 := 5ii;

  #l25.
    // empty loc

  #l31.
    return (O1, O2);
}

procedure Success7 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;


  #l32.
    L1 := I1;

  #l35.
    if !(L1 > I2) then goto l34;

  #l36.
    O := 6ii;

  #l37.
    goto l33;

  #l34.
    // empty loc

  #l38.
    O := 7ii;

  #l33.
    // empty loc

  #l39.
    return (O);
}

procedure Success8 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    Integer L2;


  #l40.
    L1 := I1;

  #l43.
    if !(L1 > 5ii) then goto l42;

  #l44.
    L2 := 6ii;

  #l45.
    goto l41;

  #l42.
    // empty loc

  #l46.
    L2 := I2;

  #l41.
    // empty loc

  #l47.
    O := L2;

  #l48.
    return (O);
}

procedure Success9 (
        Integer I1,
        Integer I2,
        Integer I3,
        Integer O) {
  local
    Integer L1;
    Integer L2;


  #l49.
    L1 := I1;

  #l52.
    if !(L1 > 5ii) then goto l51;

  #l53.
    L2 := 6ii;

  #l54.
    goto l50;

  #l51.
    // empty loc

  #l57.
    if !(I2 < 0ii) then goto l56;

  #l58.
    L2 := I3;

  #l59.
    goto l55;

  #l56.
    // empty loc

  #l60.
    L2 := 7ii;

  #l55.
    // empty loc

  #l50.
    // empty loc

  #l61.
    O := L2;

  #l62.
    return (O);
}

procedure Success10 (
        Integer I1,
        Integer I2,
        Integer I3,
        Integer O1,
        Integer O2) {
  local
    Integer L1;
    Integer L2;


  #l63.
    L2 := 5ii;

  #l64.
    L1 := I3;

  #l65.
    O2 := L1;

  #l66.
    L1 := I2;

  #l68.
    if !(L1 > 5ii) then goto l67;

  #l71.
    if !(I1 < 0ii) then goto l70;

  #l72.
    L2 := 8ii;

  #l73.
    goto l69;

  #l70.
    // empty loc

  #l74.
    L2 := 7ii;

  #l69.
    // empty loc

  #l67.
    // empty loc

  #l75.
    O1 := L2;

  #l76.
    return (O1, O2);
}

procedure Success11 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;


  #l77.
    J := 1ii;

  #l78.
    Sum := 0ii;

  #l80.
    // empty loc

  #l81.
    if !(J <= I1) then goto l79;

  #l82.
    Sum := Sum + J;

  #l83.
    J := J + 1ii;

  #l84.
    goto l80;

  #l79.
    // empty loc

  #l85.
    O1 := Sum;

  #l86.
    return (O1);
}

procedure Success12 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;


  #l87.
    J := 1ii;

  #l88.
    Sum := 0ii;

  #l90.
    // empty loc

  #l91.
    if !(J <= I1) then goto l89;

  #l92.
    Sum := Sum + J;

  #l94.
    if !(Sum > I2) then goto l93;

  #l95.
    Sum := 0ii;

  #l93.
    // empty loc

  #l96.
    J := J + 1ii;

  #l97.
    goto l90;

  #l89.
    // empty loc

  #l98.
    O1 := Sum;

  #l99.
    return (O1);
}

procedure Success13 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J1;
    Integer J2;


  #l100.
    J1 := 1ii;

  #l101.
    J2 := 1ii;

  #l102.
    Sum := 0ii;

  #l104.
    // empty loc

  #l105.
    if !(J1 <= I1) then goto l103;

  #l107.
    // empty loc

  #l108.
    if !(J2 <= I2) then goto l106;

  #l109.
    Sum := Sum + J1 * J2;

  #l110.
    J2 := J2 + 1ii;

  #l111.
    goto l107;

  #l106.
    // empty loc

  #l112.
    J1 := J1 + 1ii;

  #l113.
    goto l104;

  #l103.
    // empty loc

  #l114.
    O1 := Sum;

  #l115.
    return (O1);
}

procedure Success14 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer L1;
    Integer L2;


  #l116.
    J := 1ii;

  #l117.
    Sum := 0ii;

  #l118.
    L2 := 0ii;

  #l120.
    // empty loc

  #l121.
    if !(J <= I1) then goto l119;

  #l122.
    Sum := Sum + J;

  #l123.
    L1 := Sum;

  #l124.
    L2 := L1;

  #l125.
    J := J + 1ii;

  #l126.
    goto l120;

  #l119.
    // empty loc

  #l127.
    O1 := Sum + L2;

  #l128.
    return (O1);
}

procedure Success15 (
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer _tcomp0;
    Integer _tcomp1;


  #l129.
    Sum := 0ii;

  #l131.
    _tcomp0 := 1ii;

  #l132.
    _tcomp1 := 10ii;

  #l133.
    if _tcomp0 > _tcomp1 then goto l130;

  #l134.
    J := _tcomp0;

  #l135.
    // empty loc

  #l136.
    Sum := Sum + J;

  #l137.
    if J == _tcomp1 then goto l130;

  #l138.
    J := J + 1ii;

  #l139.
    goto l135;

  #l130.
    // empty loc

  #l140.
    O1 := Sum;

  #l141.
    return (O1);
}

procedure Success16 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer _tcomp2;
    Integer _tcomp3;


  #l142.
    Sum := 0ii;

  #l144.
    _tcomp2 := 1ii;

  #l145.
    _tcomp3 := I1;

  #l146.
    if _tcomp2 > _tcomp3 then goto l143;

  #l147.
    J := _tcomp3;

  #l148.
    // empty loc

  #l149.
    Sum := Sum + J;

  #l150.
    if J == _tcomp2 then goto l143;

  #l151.
    J := J - 1ii;

  #l152.
    goto l148;

  #l143.
    // empty loc

  #l153.
    O1 := Sum;

  #l154.
    return (O1);
}

procedure Success17 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer _tcomp4;
    Integer _tcomp5;


  #l155.
    Sum := 0ii;

  #l157.
    _tcomp4 := 1ii;

  #l158.
    _tcomp5 := I1;

  #l159.
    if _tcomp4 > _tcomp5 then goto l156;

  #l160.
    J := _tcomp4;

  #l161.
    // empty loc

  #l162.
    Sum := Sum + J;

  #l164.
    if !(Sum > I2) then goto l163;

  #l165.
    Sum := 0ii;

  #l163.
    // empty loc

  #l166.
    if J == _tcomp5 then goto l156;

  #l167.
    J := J + 1ii;

  #l168.
    goto l161;

  #l156.
    // empty loc

  #l169.
    O1 := Sum;

  #l170.
    return (O1);
}

procedure Success18 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J1;
    Integer _tcomp6;
    Integer _tcomp7;
    Integer J2;
    Integer _tcomp8;
    Integer _tcomp9;


  #l171.
    Sum := 0ii;

  #l173.
    _tcomp6 := 1ii;

  #l174.
    _tcomp7 := I1;

  #l175.
    if _tcomp6 > _tcomp7 then goto l172;

  #l176.
    J1 := _tcomp6;

  #l177.
    // empty loc

  #l179.
    _tcomp8 := 1ii;

  #l180.
    _tcomp9 := I2;

  #l181.
    if _tcomp8 > _tcomp9 then goto l178;

  #l182.
    J2 := _tcomp8;

  #l183.
    // empty loc

  #l184.
    Sum := Sum + J1 * J2;

  #l185.
    if J2 == _tcomp9 then goto l178;

  #l186.
    J2 := J2 + 1ii;

  #l187.
    goto l183;

  #l178.
    // empty loc

  #l188.
    if J1 == _tcomp7 then goto l172;

  #l189.
    J1 := J1 + 1ii;

  #l190.
    goto l177;

  #l172.
    // empty loc

  #l191.
    O1 := Sum;

  #l192.
    return (O1);
}

procedure Success19 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J1;
    Integer _tcomp10;
    Integer _tcomp11;


  #l193.
    Sum := 0ii;

  #l195.
    _tcomp10 := Sum + 1ii;

  #l196.
    _tcomp11 := I1 * I2;

  #l197.
    if _tcomp10 > _tcomp11 then goto l194;

  #l198.
    J1 := _tcomp10;

  #l199.
    // empty loc

  #l200.
    Sum := Sum + J1;

  #l201.
    if J1 == _tcomp11 then goto l194;

  #l202.
    J1 := J1 + 1ii;

  #l203.
    goto l199;

  #l194.
    // empty loc

  #l204.
    O1 := Sum;

  #l205.
    return (O1);
}

procedure Success20 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;


  #l206.
    J := 1ii;

  #l207.
    Sum := 0ii;

  #l208.
    // empty loc

  #l210.
    Sum := Sum + J;

  #l211.
    J := J + 1ii;

  #l212.
    if J >= I1 then goto l209;

  #l213.
    goto l208;

  #l209.
    // empty loc

  #l214.
    O1 := Sum;

  #l215.
    return (O1);
}

procedure Success21 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;


  #l216.
    J := 1ii;

  #l217.
    Sum := 0ii;

  #l218.
    // empty loc

  #l220.
    Sum := Sum + J;

  #l221.
    J := J + 1ii;

  #l223.
    if !(J >= I1) then goto l222;

  #l224.
    goto l219;

  #l222.
    // empty loc

  #l225.
    goto l218;

  #l219.
    // empty loc

  #l226.
    O1 := Sum;

  #l227.
    return (O1);
}

procedure Success22 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;


  #l228.
    J := 1ii;

  #l229.
    Sum := 0ii;

  #l230.
    // empty loc

  #l232.
    if J > I1 then goto l231;

  #l233.
    Sum := Sum + J;

  #l235.
    if !(Sum > I2) then goto l234;

  #l236.
    Sum := 0ii;

  #l234.
    // empty loc

  #l237.
    J := J + 1ii;

  #l238.
    goto l230;

  #l231.
    // empty loc

  #l239.
    O1 := Sum;

  #l240.
    return (O1);
}

procedure Success23 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J1;
    Integer J2;


  #l241.
    J1 := 1ii;

  #l242.
    J2 := 1ii;

  #l243.
    Sum := 0ii;

  #l244.
    // empty loc

  #l246.
    // empty loc

  #l248.
    Sum := Sum + J1 * J2;

  #l249.
    if J2 > I2 then goto l247;

  #l250.
    J2 := J2 + 1ii;

  #l251.
    goto l246;

  #l247.
    // empty loc

  #l252.
    J1 := J1 + 1ii;

  #l253.
    if J1 > I1 then goto l245;

  #l254.
    goto l244;

  #l245.
    // empty loc

  #l255.
    O1 := Sum;

  #l256.
    return (O1);
}

procedure Success24 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;


  #l257.
    J := 1ii;

  #l258.
    Sum := 0ii;

  #l259.
    // empty loc

  #l261.
    Sum := Sum + J;

  #l262.
    if Sum - J > 100ii + J then goto l260;

  #l263.
    J := J + 1ii;

  #l264.
    if J > I1 then goto l260;

  #l265.
    goto l259;

  #l260.
    // empty loc

  #l266.
    O1 := Sum;

  #l267.
    return (O1);
}

procedure Success25 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;


  #l268.
    J := 1ii;

  #l269.
    Sum := 0ii;

  #l270.
    // empty loc

  #l272.
    Sum := Sum + J;

  #l273.
    J := J + 1ii;

  #l274.
    if J >= I1 then goto l271;

  #l275.
    goto l270;

  #l271.
    // empty loc

  #l276.
    O1 := Sum;

  #l277.
    return (O1);
}

procedure Success26 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;


  #l278.
    J := 1ii;

  #l279.
    Sum := 0ii;

  #l281.
    // empty loc

  #l282.
    if !(J <= I1) then goto l280;

  #l283.
    Sum := Sum + J;

  #l284.
    if Sum > I2 then goto l280;

  #l285.
    J := J + 1ii;

  #l286.
    goto l281;

  #l280.
    // empty loc

  #l287.
    O1 := Sum;

  #l288.
    return (O1);
}

procedure Success27 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer _tcomp12;
    Integer _tcomp13;


  #l289.
    Sum := 0ii;

  #l291.
    _tcomp12 := 1ii;

  #l292.
    _tcomp13 := I1;

  #l293.
    if _tcomp12 > _tcomp13 then goto l290;

  #l294.
    J := _tcomp12;

  #l295.
    // empty loc

  #l296.
    Sum := Sum + J;

  #l297.
    if Sum > I2 then goto l290;

  #l298.
    if J == _tcomp13 then goto l290;

  #l299.
    J := J + 1ii;

  #l300.
    goto l295;

  #l290.
    // empty loc

  #l301.
    O1 := Sum;

  #l302.
    return (O1);
}package Dependence_Test_Suite_02;


procedure Success0 (
        Integer O) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;