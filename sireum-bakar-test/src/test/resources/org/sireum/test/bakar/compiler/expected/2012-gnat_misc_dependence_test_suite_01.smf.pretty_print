dependence_test_suite_01.adb
package Dependence_Test_Suite_01;


typealias Integer History_Range;

typealias  standard::integer;

procedure Success0 (
        Integer O) {

  #l1.
    O := 5ii;

  #l2.
    return;
}

procedure Success1 (
        Integer I,
        Integer O) {

  #l3.
    O := I;

  #l4.
    return;
}

procedure Success2 (
        Integer I,
        Integer O) {
  local
    Integer L;


  #l5.
    L := I;

  #l6.
    O := L;

  #l9.
    if !(I < Last) then goto l8;

  #l10.
    O := L;

  #l11.
    goto l7;

  #l8.
    // empty loc

  #l12.
    O := I;

  #l7.
    // empty loc

  #l13.
    return;
}

procedure Success3 (
        Integer I,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    Integer L3;


  #l14.
    L1 := I;

  #l15.
    L2 := L1;

  #l16.
    L3 := L2;

  #l17.
    O := L3;

  #l18.
    return;
}

procedure Success4 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    Integer L3;


  #l19.
    L1 := I1;

  #l20.
    L2 := I2;

  #l21.
    L3 := L1 + L2;

  #l22.
    O := L3;

  #l23.
    return;
}

procedure Success5 (
        Integer I1,
        Integer I2,
        Integer O1,
        Integer O2) {
  local
    Integer L1;
    Integer L2;
    Integer L3;


  #l24.
    O1 := I2;

  #l25.
    L1 := I1;

  #l26.
    L2 := L1;

  #l27.
    L3 := L1 + L2;

  #l28.
    O2 := O1;

  #l29.
    O1 := L3;

  #l30.
    return;
}

procedure Success6 (
        Integer I1,
        Integer I2,
        Integer O1,
        Integer O2) {

  #l31.
    O1 := I1;

  #l34.
    if !(I2 > 5ii) then goto l33;

  #l35.
    O2 := 5ii;

  #l36.
    goto l32;

  #l33.
    // empty loc

  #l37.
    O2 := 5ii;

  #l32.
    // empty loc

  #l38.
    return;
}

procedure Success7 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;


  #l39.
    L1 := I1;

  #l42.
    if !(L1 > I2) then goto l41;

  #l43.
    O := 6ii;

  #l44.
    goto l40;

  #l41.
    // empty loc

  #l45.
    O := 7ii;

  #l40.
    // empty loc

  #l46.
    return;
}

procedure Success8 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    Integer L2;


  #l47.
    L1 := I1;

  #l50.
    if !(L1 > 5ii) then goto l49;

  #l51.
    L2 := 6ii;

  #l52.
    goto l48;

  #l49.
    // empty loc

  #l53.
    L2 := I2;

  #l48.
    // empty loc

  #l54.
    O := L2;

  #l55.
    return;
}

procedure Success9 (
        Integer I1,
        Integer I2,
        Integer I3,
        Integer O) {
  local
    Integer L1;
    Integer L2;


  #l56.
    L1 := I1;

  #l59.
    if !(L1 > 5ii) then goto l58;

  #l60.
    L2 := 6ii;

  #l61.
    goto l57;

  #l58.
    // empty loc

  #l64.
    if !(I2 < 0ii) then goto l63;

  #l65.
    L2 := I3;

  #l66.
    goto l62;

  #l63.
    // empty loc

  #l67.
    L2 := 7ii;

  #l62.
    // empty loc

  #l57.
    // empty loc

  #l68.
    O := L2;

  #l69.
    return;
}

procedure Success10 (
        Integer I1,
        Integer I2,
        Integer I3,
        Integer O1,
        Integer O2) {
  local
    Integer L1;
    Integer L2;


  #l70.
    L2 := 5ii;

  #l71.
    L1 := I3;

  #l72.
    O2 := L1;

  #l73.
    L1 := I2;

  #l75.
    if !(L1 > 5ii) then goto l74;

  #l78.
    if !(I1 < 0ii) then goto l77;

  #l79.
    L2 := 8ii;

  #l80.
    goto l76;

  #l77.
    // empty loc

  #l81.
    L2 := 7ii;

  #l76.
    // empty loc

  #l74.
    // empty loc

  #l82.
    O1 := L2;

  #l83.
    return;
}