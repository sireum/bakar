package P;


procedure Incr_Threshold1 (
        Integer X) {

  #l3.
    if !(X < @@Threshold) then goto l2;

  #l4.
    X := X + 1ii;

  #l2.
    // empty loc

  #l5.
    return (X);
}

procedure Incr_Threshold2 (
        Integer X) {

  #l7.
    if !(X < @@Threshold) then goto l6;

  #l8.
    X := X + 1ii;

  #l6.
    // empty loc

  #l9.
    return (X);
}

procedure Incr_Threshold3 (
        Integer X) {

  #l11.
    if !(X < @@Threshold) then goto l10;

  #l12.
    X := X + 1ii;

  #l10.
    // empty loc

  #l13.
    return (X);
}

procedure Incr_Threshold4 (
        Integer X) {

  #l15.
    if !(X < @@Threshold) then goto l14;

  #l16.
    X := X + 1ii;

  #l14.
    // empty loc

  #l17.
    return (X);
}package P;


global Integer @@Threshold;

procedure $$sinit {

  #l1.
    @@Threshold := 1000ii;

  #l18.
    return;
}

procedure Incr_Threshold1 (
        Integer X) {

}

procedure Incr_Threshold2 (
        Integer X) {

}

procedure Incr_Threshold3 (
        Integer X) {

}

procedure Incr_Threshold4 (
        Integer X) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;