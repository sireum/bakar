package Dependence_Test_Suite_01;


typealias Integer History_Range;

procedure Success0 (
        Integer O) {

  #l1.
    O := 5ii;

  #l2.
    return;
}

procedure Success1 (
        Integer I,
        Integer O) {

  #l3.
    O := I;

  #l4.
    return;
}

procedure Success2 (
        Integer I,
        Integer O) {
  local
    Integer L;
    FIXME _t0;
    FIXME _t1;


  #l5.
    L := I;

  #l6.
    O := L;

  #rwl0.
    _t0 := I;

  #rwl1.
    _t1 := attribute__uif__last `History_Range;

  #l9.
    if !(_t0 < _t1) then goto l8;

  #l10.
    O := L;

  #l11.
    goto l7;

  #l8.
    // empty loc

  #l12.
    O := I;

  #l7.
    // empty loc

  #l13.
    return;
}

procedure Success3 (
        Integer I,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    Integer L3;


  #l14.
    L1 := I;

  #l15.
    L2 := L1;

  #l16.
    L3 := L2;

  #l17.
    O := L3;

  #l18.
    return;
}

procedure Success4 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    Integer L3;
    FIXME _t2;
    FIXME _t3;


  #l19.
    L1 := I1;

  #l20.
    L2 := I2;

  #rwl2.
    _t2 := L1;

  #rwl3.
    _t3 := L2;

  #l21.
    L3 := _t2 + _t3;

  #l22.
    O := L3;

  #l23.
    return;
}

procedure Success5 (
        Integer I1,
        Integer I2,
        Integer O1,
        Integer O2) {
  local
    Integer L1;
    Integer L2;
    Integer L3;
    FIXME _t4;
    FIXME _t5;


  #l24.
    O1 := I2;

  #l25.
    L1 := I1;

  #l26.
    L2 := L1;

  #rwl4.
    _t4 := L1;

  #rwl5.
    _t5 := L2;

  #l27.
    L3 := _t4 + _t5;

  #l28.
    O2 := O1;

  #l29.
    O1 := L3;

  #l30.
    return;
}

procedure Success6 (
        Integer I1,
        Integer I2,
        Integer O1,
        Integer O2) {
  local
    FIXME _t6;
    FIXME _t7;


  #l31.
    O1 := I1;

  #rwl6.
    _t6 := I2;

  #rwl7.
    _t7 := 5ii;

  #l34.
    if !(_t6 > _t7) then goto l33;

  #l35.
    O2 := 5ii;

  #l36.
    goto l32;

  #l33.
    // empty loc

  #l37.
    O2 := 5ii;

  #l32.
    // empty loc

  #l38.
    return;
}

procedure Success7 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    FIXME _t8;
    FIXME _t9;


  #l39.
    L1 := I1;

  #rwl8.
    _t8 := L1;

  #rwl9.
    _t9 := I2;

  #l42.
    if !(_t8 > _t9) then goto l41;

  #l43.
    O := 6ii;

  #l44.
    goto l40;

  #l41.
    // empty loc

  #l45.
    O := 7ii;

  #l40.
    // empty loc

  #l46.
    return;
}

procedure Success8 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    FIXME _t10;
    FIXME _t11;


  #l47.
    L1 := I1;

  #rwl10.
    _t10 := L1;

  #rwl11.
    _t11 := 5ii;

  #l50.
    if !(_t10 > _t11) then goto l49;

  #l51.
    L2 := 6ii;

  #l52.
    goto l48;

  #l49.
    // empty loc

  #l53.
    L2 := I2;

  #l48.
    // empty loc

  #l54.
    O := L2;

  #l55.
    return;
}

procedure Success9 (
        Integer I1,
        Integer I2,
        Integer I3,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    FIXME _t12;
    FIXME _t13;
    FIXME _t14;
    FIXME _t15;


  #l56.
    L1 := I1;

  #rwl12.
    _t12 := L1;

  #rwl13.
    _t13 := 5ii;

  #l59.
    if !(_t12 > _t13) then goto l58;

  #l60.
    L2 := 6ii;

  #l61.
    goto l57;

  #l58.
    // empty loc

  #rwl14.
    _t14 := I2;

  #rwl15.
    _t15 := 0ii;

  #l64.
    if !(_t14 < _t15) then goto l63;

  #l65.
    L2 := I3;

  #l66.
    goto l62;

  #l63.
    // empty loc

  #l67.
    L2 := 7ii;

  #l62.
    // empty loc

  #l57.
    // empty loc

  #l68.
    O := L2;

  #l69.
    return;
}

procedure Success10 (
        Integer I1,
        Integer I2,
        Integer I3,
        Integer O1,
        Integer O2) {
  local
    Integer L1;
    Integer L2;
    FIXME _t16;
    FIXME _t17;
    FIXME _t18;
    FIXME _t19;


  #l70.
    L2 := 5ii;

  #l71.
    L1 := I3;

  #l72.
    O2 := L1;

  #l73.
    L1 := I2;

  #rwl16.
    _t16 := L1;

  #rwl17.
    _t17 := 5ii;

  #l75.
    if !(_t16 > _t17) then goto l74;

  #rwl18.
    _t18 := I1;

  #rwl19.
    _t19 := 0ii;

  #l78.
    if !(_t18 < _t19) then goto l77;

  #l79.
    L2 := 8ii;

  #l80.
    goto l76;

  #l77.
    // empty loc

  #l81.
    L2 := 7ii;

  #l76.
    // empty loc

  #l74.
    // empty loc

  #l82.
    O1 := L2;

  #l83.
    return;
}package Dependence_Test_Suite_01;


procedure Success0 (
        Integer O) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;