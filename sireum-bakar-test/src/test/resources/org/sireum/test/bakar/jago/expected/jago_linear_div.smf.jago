(* Compilation Unit *)
Library_Unit_XX 1
  (* Compilation Unit - Unit Declaration *)
  (Library_Subprogram_XX 2
    (* Procedure Body Declaration *)
    (Global_Procedure_XX 3
      (mkprocedure_declaration_xx 4
        (* Procedure Name *)
        ((*Linear_Div*) 1)
        (* Formal Parameters *)
        (
        (mkparameter_specification_xx 5 ((*Dividend*) 1) Integer In) :: 
        (mkparameter_specification_xx 6 ((*Divisor*) 2) Integer In) :: 
        (mkparameter_specification_xx 7 ((*Quotient*) 3) Integer Out) :: 
        (mkparameter_specification_xx 8 ((*Remainder*) 4) Integer Out) :: nil) 
        (* Procedure Contract *)
        (nil)  
        (* Object Declarations *)
        (D_Null_Declaration_XX)
        (* Procedure Body *)
          (S_Sequence_XX 9
          (S_Assignment_XX 10 (E_Identifier_XX 11 ((*Quotient*) 3) (**(nil)**)) (E_Literal_XX 12 (Integer_Literal 0) (**(nil)**))) 
          (S_Sequence_XX 13
          (S_Assignment_XX 14 (E_Identifier_XX 15 ((*Remainder*) 4) (**(nil)**)) (E_Name_XX 16 (E_Identifier_XX 17 ((*Dividend*) 1) (**(nil)**)) (**(nil)**))) 
          (S_While_Loop_XX 18 (E_Binary_Operation_XX 19 Greater_Than_Or_Equal (E_Name_XX 20 (E_Identifier_XX 21 ((*Remainder*) 4) (**(nil)**)) (**(nil)**)) (E_Name_XX 22 (E_Identifier_XX 23 ((*Divisor*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
            (S_Sequence_XX 24
            (S_Assignment_XX 25 (E_Identifier_XX 26 ((*Quotient*) 3) (**(nil)**)) (E_Binary_Operation_XX 27 Plus (E_Name_XX 28 (E_Identifier_XX 29 ((*Quotient*) 3) (**(nil)**)) (**(nil)**)) (E_Literal_XX 30 (Integer_Literal 1) (**(nil)**)) (**(Do_Overflow_Check :: nil)**))) 
            (S_Sequence_XX 31
            (S_Assignment_XX 32 (E_Identifier_XX 33 ((*Quotient*) 3) (**(nil)**)) (E_Binary_Operation_XX 34 Plus (E_Name_XX 35 (E_Identifier_XX 36 ((*Quotient*) 3) (**(nil)**)) (**(nil)**)) (E_Literal_XX 37 (Integer_Literal 1) (**(nil)**)) (**(Do_Overflow_Check :: nil)**))) 
            (S_Assignment_XX 38 (E_Identifier_XX 39 ((*Remainder*) 4) (**(nil)**)) (E_Binary_Operation_XX 40 Minus (E_Name_XX 41 (E_Identifier_XX 42 ((*Remainder*) 4) (**(nil)**)) (**(nil)**)) (E_Name_XX 43 (E_Identifier_XX 44 ((*Divisor*) 2) (**(nil)**)) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)))))
          )))
      )
    )
  )