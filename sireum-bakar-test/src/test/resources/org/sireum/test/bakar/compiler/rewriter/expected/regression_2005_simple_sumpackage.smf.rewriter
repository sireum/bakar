package SumPackage;


procedure Integer Sum (
        Integer N) {
  local
    Integer R;
    Integer T;


  #l0.
    R := 0ii;

  #l2.
    if !(N >= 0ii) then goto l1;

  #l3.
    T := N - 1ii;

  #l5.
    // empty loc

  #l6.
    if !(T >= 0ii) then goto l4;

  #l7.
    R := R + 1ii;

  #l8.
    T := T - 1ii;

  #l9.
    goto l5;

  #l4.
    // empty loc

  #l10.
    assert (proof__uif__assert N == R, "Assertion failed at [15, 7]");

  #l1.
    // empty loc

  #l11.
    return R;
}

procedure Sum2 (
        Integer N,
        Integer R) {
  local
    Integer T;


  #l12.
    R := 0ii;

  #l14.
    if !(N >= 0ii) then goto l13;

  #l15.
    T := N - 1ii;

  #l17.
    // empty loc

  #l18.
    if !(T >= 0ii) then goto l16;

  #l19.
    R := R + 1ii;

  #l20.
    T := T - 1ii;

  #l21.
    goto l17;

  #l16.
    // empty loc

  #l22.
    assert (proof__uif__assert N == R, "Assertion failed at [32, 7]");

  #l13.
    // empty loc

  #l23.
    return;
}package SumPackage;


procedure Integer Sum (
        Integer N) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;