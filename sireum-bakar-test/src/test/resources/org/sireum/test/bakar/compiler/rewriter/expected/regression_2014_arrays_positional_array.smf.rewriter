package Positional_Array;


procedure $$binit {
  local
    Index _t0;
    Index _t1;


  #rwl0.
    _t0 := attribute__uif__first `Index;

  #rwl1.
    _t1 := 0ii;

  #l1.
    @@Box2 := `Square {Index iter => 
        switch iter
          case _t0 + _t1 => 77ii
          default => 5ii};

  #l4.
    return;
}

procedure dummy (
        Index X) {
  local
    Integer _t2;
    universal_integer _t3;


  #rwl2.
    _t2 := @@Box[X];

  #rwl3.
    _t3 := 1ii;

  #l2.
    @@Box[X] := _t2 - _t3;

  #l3.
    return;
}package Positional_Array;


typealias Integer Index;

typealias _ARRAY_ Square;

global Square @@Box;

global Square @@Box2;

procedure $$sinit {
  local
    Index _t0;
    Index _t1;
    Index _t2;
    Index _t3;
    Index _t4;
    Index _t5;
    Index _t6;
    Index _t7;
    Index _t8;
    Index _t9;


  #rwl0.
    _t0 := attribute__uif__first `Index;

  #rwl1.
    _t1 := 0ii;

  #rwl2.
    _t2 := attribute__uif__first `Index;

  #rwl3.
    _t3 := 1ii;

  #rwl4.
    _t4 := attribute__uif__first `Index;

  #rwl5.
    _t5 := 2ii;

  #rwl6.
    _t6 := attribute__uif__first `Index;

  #rwl7.
    _t7 := 3ii;

  #rwl8.
    _t8 := attribute__uif__first `Index;

  #rwl9.
    _t9 := 4ii;

  #l0.
    @@Box := `Square {Index iter => 
        switch iter
          case _t0 + _t1 => -1ii
          case _t2 + _t3 => -2ii
          case _t4 + _t5 => 7ii
          case _t6 + _t7 => 3ii
          case _t8 + _t9 => 2ii
          default => 3ii};

  #l5.
    return;
}

procedure dummy (
        Index X) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;