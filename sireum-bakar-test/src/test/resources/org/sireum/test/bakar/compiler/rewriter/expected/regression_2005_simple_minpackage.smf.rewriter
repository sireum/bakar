package Minpackage;


procedure Integer MinFunc (
        Integer X,
        Integer Y) {
  local
    Integer Min;
    Integer Max;
    Integer _t0;
    Integer _t1;


  #rwl0.
    _t0 := X;

  #rwl1.
    _t1 := Y;

  #l2.
    if !(_t0 >= _t1) then goto l1;

  #l3.
    Min := Y;

  #l4.
    Max := X;

  #l5.
    goto l0;

  #l1.
    // empty loc

  #l6.
    Min := X;

  #l7.
    Max := Y;

  #l0.
    // empty loc

  #l8.
    assert proof__uif__assert Min <= X && Min <= Y && X <= Max && Y <= Max "Assertion failed at [13, 7]";

  #l9.
    return Min;
}package Minpackage;


procedure Integer MinFunc (
        Integer X,
        Integer Y) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;