package SimpleRecord;


typealias Integer SmallInt;

typealias _ARRAY_ Vector;

record Rec {

  SmallInt A;

  Vector B;
}

record NestedRec {

  Rec X;
}

procedure Boolean Dummy {

  #l0.
    return true;
}

procedure Add (
        SmallInt I,
        Rec R) {
  local
    SmallInt _t0;
    SmallInt _t1;


  #rwl0.
    _t0 := R.A;

  #rwl1.
    _t1 := I;

  #l1.
    R.A := _t0 + _t1;

  #l2.
    return;
}

procedure NAdd (
        SmallInt I,
        NestedRec NR) {
  local
    Rec _t2;
    Rec _t3;
    SmallInt _t4;
    SmallInt _t5;


  #rwl2.
    _t2 := NR.X;

  #rwl4.
    _t3 := NR.X;

  #rwl5.
    _t4 := _t3.A;

  #rwl6.
    _t5 := I;

  #l3.
    _t2.A := _t4 + _t5;

  #rwl3.
    NR.X := _t2;

  #l4.
    return;
}

procedure AAdd (
        SmallInt I,
        Rec R) {
  local
    Vector _t6;
    SmallInt _t7;
    universal_integer _t8;


  #rwl7.
    _t6 := R.B;

  #rwl9.
    _t7 := I;

  #rwl10.
    _t8 := 1ii;

  #l5.
    _t6[I] := _t7 + _t8;

  #rwl8.
    R.B := _t6;

  #l6.
    return;
}package SimpleRecord;


procedure Boolean Dummy {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;