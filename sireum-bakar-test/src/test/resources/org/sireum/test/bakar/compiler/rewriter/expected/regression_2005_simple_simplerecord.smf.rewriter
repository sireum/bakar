package SimpleRecord;


typealias Integer SmallInt;

typealias _ARRAY_ Vector;

record Rec {

  SmallInt A;

  Vector B;
}

record NestedRec {

  Rec X;
}

procedure Boolean Dummy {

  #l0.
    return true;
}

procedure Add (
        SmallInt I,
        Rec R) {

  #l1.
    R.A := R.A + I;

  #l2.
    return;
}

procedure NAdd (
        SmallInt I,
        NestedRec NR) {
  local
    Rec _t0;
    Rec _t1;


  #l3.
    _t0 := NR.X;

  #rwl2.
    _t1 := NR.X;

  #rwl0.
    _t0.A := _t1.A + I;

  #rwl1.
    NR.X := _t0;

  #l4.
    return;
}

procedure AAdd (
        SmallInt I,
        Rec R) {
  local
    Vector _t2;


  #l5.
    _t2 := R.B;

  #rwl3.
    _t2[I] := I + 1ii;

  #rwl4.
    R.B := _t2;

  #l6.
    return;
}package SimpleRecord;


procedure Boolean Dummy {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;