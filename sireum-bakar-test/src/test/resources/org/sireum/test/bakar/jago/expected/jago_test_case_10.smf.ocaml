(* Compilation Unit *)
CompilationUnit ( 1,
  (* Compilation Unit - Unit Declaration *)
  UnitDecl( 2,
    (* Procedure Body Declaration *)
    Sproc( 3,
      { 
        proc_astnum = 
          (* Procedure Body - AST Number *)
          4;
        proc_name = 
          (* Procedure Body - Name *)
           (*Test_Case_10*) 1;
        proc_specs =
          (* Procedure Body - Specification *)
          None;
        proc_params = 
          (* Procedure Body - Parameters *)
          Some([
                { param_astnum = 5; param_idents = [ (*I1*) 1;  (*I2*) 2;  (*I3*) 3]; param_typenum = 1; param_mode = In; param_init = None }; 
                { param_astnum = 6; param_idents = [ (*O1*) 4;  (*O2*) 5]; param_typenum = 1; param_mode = Out; param_init = None }
              ]);
        proc_loc_idents = 
          (* Procedure Body - Local Defined Variables *)
          Some([
                { local_astnum = 7; local_idents = [ (*L1*) 6;  (*L2*) 7]; local_typenum = 1; local_init = None }
              ]);
        proc_body =
          (* Procedure Body - Body *)
          Sseq (8,
            Sassign (9,  (*L2*) 7, Econst (10, 5)),
            Sseq (11,
              Sassign (12,  (*L1*) 6, Evar (13,  (*I3*) 3)),
              Sseq (14,
                Sassign (15,  (*O2*) 5, Evar (16,  (*L1*) 6)),
                Sseq (17,
                  Sassign (18,  (*L1*) 6, Evar (19,  (*I2*) 2)),
                  Sseq (20,
                    Sassign (21,  (*L1*) 6, Ebinop (22, Oadd, Evar (23,  (*I1*) 1), Evar (24,  (*I2*) 2))),
                    Sseq (25,
                      Sifthen (26, Ebinop (27, Cgt, Evar (28,  (*L1*) 6), Econst (29, 5)),
                        Sifthen (30, Ebinop (31, Clt, Evar (32,  (*I1*) 1), Econst (33, 0)),
                          Sassign (34,  (*L2*) 7, Econst (35, 8))
                        )
                      ),
                      Sassign (36,  (*O1*) 4, Evar (37,  (*L2*) 7)) ) ) ) ) ) )
      }
    )
  ),  
  (* Compilation Unit - Type Table *)
  {
    tt_exptype_table = 
      (* Expression AstNum --> TypeNum *) 
      [
        (10, 2) ;
        (13, 1) ;
        (16, 1) ;
        (19, 1) ;
        (22, 1) ;
        (23, 1) ;
        (24, 1) ;
        (27, 3) ;
        (28, 1) ;
        (29, 2) ;
        (31, 3) ;
        (32, 1) ;
        (33, 2) ;
        (35, 2) ;
        (37, 1)
      ];
    tt_typename_table = 
      (* TypeNum --> (Type URI * (Type Declaration AST Num) Option) *) 
      [
        (1, ("ada://ordinary_type/Standard-1:1/Integer-1:1", None)) ;
        (2, ("universal_integer", None)) ;
        (3, ("ada://ordinary_type/Standard-1:1/Boolean-1:1", None))
      ]
  }
)