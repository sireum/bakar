(D_Procedure_Body_XX 1 
  (mkprocedure_body_xx 3
    (* Procedure Name *)
    ((*Test_for_Coq*) 1)
    (* Formal Parameters *)
    (nil) 
    (* Procedure Aspects *)
    (nil)  
    (* Object Declarations *)
    ((D_Seq_Declaration_XX 4
  (D_Object_Declaration_XX 5 (mkobject_declaration_xx 6 ((*N*) 1) Integer (Some ((E_Literal_XX 7 (Integer_Literal 25) (**(nil)**)))))) 
  (D_Seq_Declaration_XX 8
  (D_Object_Declaration_XX 9 (mkobject_declaration_xx 10 ((*Result*) 2) Boolean None)) 
  (D_Seq_Declaration_XX 11
  (D_Object_Declaration_XX 12 (mkobject_declaration_xx 13 ((*I*) 3) Integer None)) 
  (D_Object_Declaration_XX 14 (mkobject_declaration_xx 15 ((*X*) 4) Integer None))))))
    (* Procedure Body *)
      (S_Sequence_XX 16
      (S_Assignment_XX 17 (E_Identifier_XX 18 ((*Result*) 2) (**(nil)**)) (E_Literal_XX 19 (Boolean_Literal true) (**(nil)**))) 
      (S_Sequence_XX 20
      (S_If_XX 21 (E_Binary_Operation_XX 22 Less_Than_Or_Equal (E_Name_XX 23 (E_Identifier_XX 24 ((*N*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 25 (Integer_Literal 1) (**(nil)**)) (**(nil)**))
        (S_Assignment_XX 26 (E_Identifier_XX 27 ((*Result*) 2) (**(nil)**)) (E_Literal_XX 28 (Boolean_Literal false) (**(nil)**)))
        S_Null_XX
      ) 
      (S_Sequence_XX 29
      (S_Assignment_XX 30 (E_Identifier_XX 31 ((*I*) 3) (**(nil)**)) (E_Literal_XX 32 (Integer_Literal 2) (**(nil)**))) 
      (S_While_Loop_XX 33 (E_Binary_Operation_XX 34 Less_Than_Or_Equal (E_Binary_Operation_XX 35 Multiply (E_Name_XX 36 (E_Identifier_XX 37 ((*I*) 3) (**(nil)**)) (**(nil)**)) (E_Name_XX 38 (E_Identifier_XX 39 ((*I*) 3) (**(nil)**)) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)) (E_Name_XX 40 (E_Identifier_XX 41 ((*N*) 1) (**(nil)**)) (**(nil)**)) (**(nil)**))
        (S_Sequence_XX 42
        (S_Assignment_XX 43 (E_Identifier_XX 44 ((*X*) 4) (**(nil)**)) (E_Binary_Operation_XX 45 Divide (E_Name_XX 46 (E_Identifier_XX 47 ((*N*) 1) (**(nil)**)) (**(nil)**)) (E_Name_XX 48 (E_Identifier_XX 49 ((*I*) 3) (**(nil)**)) (**(nil)**)) (**(Do_Division_Check :: Do_Overflow_Check :: nil)**))) 
        (S_Sequence_XX 50
        (S_If_XX 51 (E_Binary_Operation_XX 52 Equal (E_Name_XX 53 (E_Identifier_XX 54 ((*N*) 1) (**(nil)**)) (**(nil)**)) (E_Binary_Operation_XX 55 Multiply (E_Name_XX 56 (E_Identifier_XX 57 ((*X*) 4) (**(nil)**)) (**(nil)**)) (E_Name_XX 58 (E_Identifier_XX 59 ((*I*) 3) (**(nil)**)) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)) (**(nil)**))
          (S_Assignment_XX 60 (E_Identifier_XX 61 ((*Result*) 2) (**(nil)**)) (E_Literal_XX 62 (Boolean_Literal false) (**(nil)**)))
          S_Null_XX
        ) 
        (S_Assignment_XX 63 (E_Identifier_XX 64 ((*I*) 3) (**(nil)**)) (E_Binary_Operation_XX 65 Plus (E_Name_XX 66 (E_Identifier_XX 67 ((*I*) 3) (**(nil)**)) (**(nil)**)) (E_Literal_XX 68 (Integer_Literal 1) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)))))
      ))))
  )
)