Definition Coq_AST_Tree_XX := 
(D_Seq_Declaration_XX 1
(D_Seq_Declaration_XX 13
(D_Type_Declaration_XX 14 (Integer_Type_Declaration_XX 15 ((*T*) 1) (Range_XX 0 10))) 
(D_Seq_Declaration_XX 16
(D_Type_Declaration_XX 17 (Subtype_Declaration_XX 18 ((*U*) 2) (Integer_Type ((*T*) 1)) (Range_XX 1 10))) 
(D_Seq_Declaration_XX 19
(D_Type_Declaration_XX 20 (Array_Type_Declaration_XX 21 ((*Ar*) 3) ((*index subtype mark*) Integer) ((*component type*) (Subtype ((*U*) 2))))) 
D_Null_Declaration_XX (* Undefined Declarations ! *)))) 
(D_Procedure_Body_XX 25 
  (mkprocedure_body_xx 27
    (* = = = Procedure Name = = = *)
    ((*Search*) 1)
    (* = = = Formal Parameters = = = *)
    (
    (mkparameter_specification_xx 28 ((*A*) 1) (Array_Type ((*Ar*) 3)) In) :: 
    (mkparameter_specification_xx 29 ((*I*) 2) Integer In) :: 
    (mkparameter_specification_xx 30 ((*Result*) 3) (Integer_Type ((*T*) 1)) Out) :: nil)
    (* = = = Object Declarations = = = *)
    ((D_Seq_Declaration_XX 31
  (D_Object_Declaration_XX 32 (mkobject_declaration_xx 33 ((*Left*) 4) (Subtype ((*U*) 2)) None)) 
  (D_Seq_Declaration_XX 34
  (D_Object_Declaration_XX 35 (mkobject_declaration_xx 36 ((*Right*) 5) (Subtype ((*U*) 2)) None)) 
  (D_Object_Declaration_XX 37 (mkobject_declaration_xx 38 ((*Med*) 6) (Subtype ((*U*) 2)) None)))))
    (* = = = Procedure Body = = = *)
      (S_Sequence_XX 39
      (S_Assignment_XX 40 (E_Identifier_XX 41 ((*Left*) 4) (**(nil)**)) (E_Literal_XX 42 (Integer_Literal 1) (**(nil)**))) 
      (S_Sequence_XX 43
      (S_Assignment_XX 44 (E_Identifier_XX 45 ((*Right*) 5) (**(nil)**)) (E_Literal_XX 46 (Integer_Literal 10) (**(nil)**))) 
      (S_Sequence_XX 47
      (S_Assignment_XX 48 (E_Identifier_XX 49 ((*Result*) 3) (**(nil)**)) (E_Literal_XX 50 (Integer_Literal 0) (**(nil)**))) 
      (S_Sequence_XX 51
      (S_If_XX 52 (E_Binary_Operation_XX 64 Less_Than (E_Name_XX 65 (E_Indexed_Component_XX 66 67 ((*A*) 1) (E_Name_XX 69 (E_Identifier_XX 70 ((*Right*) 5) (**(nil)**)) (**(nil)**)) (**(nil)**)) (**(nil)**)) (E_Name_XX 71 (E_Identifier_XX 72 ((*I*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
        (S_Assignment_XX 73 (E_Identifier_XX 74 ((*Result*) 3) (**(nil)**)) (E_Literal_XX 75 (Integer_Literal 0) (**(nil)**)))
        S_Null_XX
      ) 
      (S_While_Loop_XX 76 (E_Binary_Operation_XX 77 Less_Than_Or_Equal (E_Name_XX 78 (E_Identifier_XX 79 ((*Left*) 4) (**(nil)**)) (**(nil)**)) (E_Name_XX 80 (E_Identifier_XX 81 ((*Right*) 5) (**(nil)**)) (**(nil)**)) (**(nil)**))
        (S_Sequence_XX 82
        (S_Assignment_XX 83 (E_Identifier_XX 84 ((*Med*) 6) (**(nil)**)) (E_Binary_Operation_XX 85 Plus (E_Name_XX 86 (E_Identifier_XX 87 ((*Left*) 4) (**(nil)**)) (**(nil)**)) (E_Binary_Operation_XX 88 Divide (E_Binary_Operation_XX 89 Minus (E_Name_XX 90 (E_Identifier_XX 91 ((*Right*) 5) (**(nil)**)) (**(nil)**)) (E_Name_XX 92 (E_Identifier_XX 93 ((*Left*) 4) (**(nil)**)) (**(nil)**)) (**(nil)**)) (E_Literal_XX 94 (Integer_Literal 2) (**(nil)**)) (**(Do_Division_Check :: nil)**)) (**(Do_Range_Check :: nil)**))) 
        (S_If_XX 95 (E_Binary_Operation_XX 96 Less_Than (E_Name_XX 97 (E_Indexed_Component_XX 98 99 ((*A*) 1) (E_Name_XX 101 (E_Identifier_XX 102 ((*Med*) 6) (**(nil)**)) (**(nil)**)) (**(nil)**)) (**(nil)**)) (E_Name_XX 103 (E_Identifier_XX 104 ((*I*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
          (S_Assignment_XX 105 (E_Identifier_XX 106 ((*Left*) 4) (**(nil)**)) (E_Binary_Operation_XX 107 Plus (E_Name_XX 108 (E_Identifier_XX 109 ((*Med*) 6) (**(nil)**)) (**(nil)**)) (E_Literal_XX 110 (Integer_Literal 1) (**(nil)**)) (**(Do_Range_Check :: nil)**)))
          (S_If_XX 111 (E_Binary_Operation_XX 112 Greater_Than (E_Name_XX 113 (E_Indexed_Component_XX 114 115 ((*A*) 1) (E_Name_XX 117 (E_Identifier_XX 118 ((*Med*) 6) (**(nil)**)) (**(nil)**)) (**(nil)**)) (**(nil)**)) (E_Name_XX 119 (E_Identifier_XX 120 ((*I*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
            (S_Assignment_XX 121 (E_Identifier_XX 122 ((*Right*) 5) (**(nil)**)) (E_Binary_Operation_XX 123 Minus (E_Name_XX 124 (E_Identifier_XX 125 ((*Med*) 6) (**(nil)**)) (**(nil)**)) (E_Literal_XX 126 (Integer_Literal 1) (**(nil)**)) (**(Do_Range_Check :: nil)**)))
            (S_Assignment_XX 127 (E_Identifier_XX 128 ((*Result*) 3) (**(nil)**)) (E_Name_XX 129 (E_Identifier_XX 130 ((*Med*) 6) (**(nil)**)) (**(nil)**)))
          )
        ))
      )))))
  )
)).

Definition Symbol_Table_XX := 
(mkSymbolTable_xx
  (*///////////////////////////////////*)
  (* = = = (1) variable type map = = = *)
  (*///////////////////////////////////*)
  (nil)
  (*////////////////////////////////////////////*)
  (* = = = (2) subprogram declaration map = = = *)
  (*////////////////////////////////////////////*)
  ((((*Search*) 1), (0, (mkprocedure_body_xx 27
  (* = = = Procedure Name = = = *)
  ((*Search*) 1)
  (* = = = Formal Parameters = = = *)
  (
  (mkparameter_specification_xx 28 ((*A*) 1) (Array_Type ((*Ar*) 3)) In) :: 
  (mkparameter_specification_xx 29 ((*I*) 2) Integer In) :: 
  (mkparameter_specification_xx 30 ((*Result*) 3) (Integer_Type ((*T*) 1)) Out) :: nil)
  (* = = = Object Declarations = = = *)
  ((D_Seq_Declaration_XX 31
(D_Object_Declaration_XX 32 (mkobject_declaration_xx 33 ((*Left*) 4) (Subtype ((*U*) 2)) None)) 
(D_Seq_Declaration_XX 34
(D_Object_Declaration_XX 35 (mkobject_declaration_xx 36 ((*Right*) 5) (Subtype ((*U*) 2)) None)) 
(D_Object_Declaration_XX 37 (mkobject_declaration_xx 38 ((*Med*) 6) (Subtype ((*U*) 2)) None)))))
  (* = = = Procedure Body = = = *)
    (S_Sequence_XX 39
    (S_Assignment_XX 40 (E_Identifier_XX 41 ((*Left*) 4) (**(nil)**)) (E_Literal_XX 42 (Integer_Literal 1) (**(nil)**))) 
    (S_Sequence_XX 43
    (S_Assignment_XX 44 (E_Identifier_XX 45 ((*Right*) 5) (**(nil)**)) (E_Literal_XX 46 (Integer_Literal 10) (**(nil)**))) 
    (S_Sequence_XX 47
    (S_Assignment_XX 48 (E_Identifier_XX 49 ((*Result*) 3) (**(nil)**)) (E_Literal_XX 50 (Integer_Literal 0) (**(nil)**))) 
    (S_Sequence_XX 51
    (S_If_XX 52 (E_Binary_Operation_XX 64 Less_Than (E_Name_XX 65 (E_Indexed_Component_XX 66 67 ((*A*) 1) (E_Name_XX 69 (E_Identifier_XX 70 ((*Right*) 5) (**(nil)**)) (**(nil)**)) (**(nil)**)) (**(nil)**)) (E_Name_XX 71 (E_Identifier_XX 72 ((*I*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
      (S_Assignment_XX 73 (E_Identifier_XX 74 ((*Result*) 3) (**(nil)**)) (E_Literal_XX 75 (Integer_Literal 0) (**(nil)**)))
      S_Null_XX
    ) 
    (S_While_Loop_XX 76 (E_Binary_Operation_XX 77 Less_Than_Or_Equal (E_Name_XX 78 (E_Identifier_XX 79 ((*Left*) 4) (**(nil)**)) (**(nil)**)) (E_Name_XX 80 (E_Identifier_XX 81 ((*Right*) 5) (**(nil)**)) (**(nil)**)) (**(nil)**))
      (S_Sequence_XX 82
      (S_Assignment_XX 83 (E_Identifier_XX 84 ((*Med*) 6) (**(nil)**)) (E_Binary_Operation_XX 85 Plus (E_Name_XX 86 (E_Identifier_XX 87 ((*Left*) 4) (**(nil)**)) (**(nil)**)) (E_Binary_Operation_XX 88 Divide (E_Binary_Operation_XX 89 Minus (E_Name_XX 90 (E_Identifier_XX 91 ((*Right*) 5) (**(nil)**)) (**(nil)**)) (E_Name_XX 92 (E_Identifier_XX 93 ((*Left*) 4) (**(nil)**)) (**(nil)**)) (**(nil)**)) (E_Literal_XX 94 (Integer_Literal 2) (**(nil)**)) (**(Do_Division_Check :: nil)**)) (**(Do_Range_Check :: nil)**))) 
      (S_If_XX 95 (E_Binary_Operation_XX 96 Less_Than (E_Name_XX 97 (E_Indexed_Component_XX 98 99 ((*A*) 1) (E_Name_XX 101 (E_Identifier_XX 102 ((*Med*) 6) (**(nil)**)) (**(nil)**)) (**(nil)**)) (**(nil)**)) (E_Name_XX 103 (E_Identifier_XX 104 ((*I*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
        (S_Assignment_XX 105 (E_Identifier_XX 106 ((*Left*) 4) (**(nil)**)) (E_Binary_Operation_XX 107 Plus (E_Name_XX 108 (E_Identifier_XX 109 ((*Med*) 6) (**(nil)**)) (**(nil)**)) (E_Literal_XX 110 (Integer_Literal 1) (**(nil)**)) (**(Do_Range_Check :: nil)**)))
        (S_If_XX 111 (E_Binary_Operation_XX 112 Greater_Than (E_Name_XX 113 (E_Indexed_Component_XX 114 115 ((*A*) 1) (E_Name_XX 117 (E_Identifier_XX 118 ((*Med*) 6) (**(nil)**)) (**(nil)**)) (**(nil)**)) (**(nil)**)) (E_Name_XX 119 (E_Identifier_XX 120 ((*I*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
          (S_Assignment_XX 121 (E_Identifier_XX 122 ((*Right*) 5) (**(nil)**)) (E_Binary_Operation_XX 123 Minus (E_Name_XX 124 (E_Identifier_XX 125 ((*Med*) 6) (**(nil)**)) (**(nil)**)) (E_Literal_XX 126 (Integer_Literal 1) (**(nil)**)) (**(Do_Range_Check :: nil)**)))
          (S_Assignment_XX 127 (E_Identifier_XX 128 ((*Result*) 3) (**(nil)**)) (E_Name_XX 129 (E_Identifier_XX 130 ((*Med*) 6) (**(nil)**)) (**(nil)**)))
        )
      ))
    )))))
))) :: nil)
  (*//////////////////////////////////////*)
  (* = = = (3) type declaration map = = = *)
  (*//////////////////////////////////////*)
  ((((*Ar*) 3), (Array_Type_Declaration_XX 21 ((*Ar*) 3) ((*index subtype mark*) Integer) ((*component type*) (Subtype ((*U*) 2))))) :: (((*U*) 2), (Subtype_Declaration_XX 18 ((*U*) 2) (Integer_Type ((*T*) 1)) (Range_XX 1 10))) :: (((*T*) 1), (Integer_Type_Declaration_XX 15 ((*T*) 1) (Range_XX 0 10))) :: nil)
  (*/////////////////////////////////////*)
  (* = = = (4) expression type map = = = *)
  (*/////////////////////////////////////*)
  ((92, (Subtype ((*U*) 2))) :: (101, (Subtype ((*U*) 2))) :: (110, Integer) :: (128, (Integer_Type ((*T*) 1))) :: (119, Integer) :: (104, Integer) :: (122, (Subtype ((*U*) 2))) :: (77, Boolean) :: (86, (Subtype ((*U*) 2))) :: (113, Integer) :: (68, (Array_Type ((*Ar*) 3))) :: (41, (Subtype ((*U*) 2))) :: (50, Integer) :: (59, (Subtype ((*U*) 2))) :: (62, Integer) :: (53, Boolean) :: (125, (Subtype ((*U*) 2))) :: (80, (Subtype ((*U*) 2))) :: (89, (Integer_Type ((*T*) 1))) :: (116, (Array_Type ((*Ar*) 3))) :: (71, Integer) :: (98, Integer) :: (107, (Integer_Type ((*T*) 1))) :: (74, (Integer_Type ((*T*) 1))) :: (65, Integer) :: (124, (Subtype ((*U*) 2))) :: (106, (Subtype ((*U*) 2))) :: (118, (Subtype ((*U*) 2))) :: (46, Integer) :: (100, (Array_Type ((*Ar*) 3))) :: (109, (Subtype ((*U*) 2))) :: (91, (Subtype ((*U*) 2))) :: (64, Boolean) :: (55, Integer) :: (58, (Integer_Type ((*T*) 1))) :: (85, (Integer_Type ((*T*) 1))) :: (94, Integer) :: (49, (Integer_Type ((*T*) 1))) :: (130, (Subtype ((*U*) 2))) :: (103, Integer) :: (112, Boolean) :: (97, Integer) :: (79, (Subtype ((*U*) 2))) :: (88, (Integer_Type ((*T*) 1))) :: (70, (Subtype ((*U*) 2))) :: (61, Integer) :: (129, (Subtype ((*U*) 2))) :: (120, Integer) :: (60, (Subtype ((*U*) 2))) :: (87, (Subtype ((*U*) 2))) :: (96, Boolean) :: (123, (Integer_Type ((*T*) 1))) :: (114, Integer) :: (69, (Subtype ((*U*) 2))) :: (78, (Subtype ((*U*) 2))) :: (63, Integer) :: (90, (Subtype ((*U*) 2))) :: (45, (Subtype ((*U*) 2))) :: (54, Integer) :: (126, Integer) :: (72, Integer) :: (81, (Subtype ((*U*) 2))) :: (108, (Subtype ((*U*) 2))) :: (117, (Subtype ((*U*) 2))) :: (57, (Array_Type ((*Ar*) 3))) :: (84, (Subtype ((*U*) 2))) :: (93, (Subtype ((*U*) 2))) :: (102, (Subtype ((*U*) 2))) :: (75, Integer) :: (66, Integer) :: (42, Integer) :: nil)
  (*/////////////////////////////////////////////////*)
  (* = = = (5) ast node to source location map = = = *)
  (*/////////////////////////////////////////////////*)
  ((92, (sloc (*Line*)26 (*Col*)33 (*EndLine*)26 (*EndCol*)36)) :: (101, (sloc (*Line*)28 (*Col*)16 (*EndLine*)28 (*EndCol*)18)) :: (110, (sloc (*Line*)29 (*Col*)27 (*EndLine*)29 (*EndCol*)27)) :: (128, (sloc (*Line*)34 (*Col*)15 (*EndLine*)34 (*EndCol*)20)) :: (119, (sloc (*Line*)31 (*Col*)24 (*EndLine*)31 (*EndCol*)24)) :: (104, (sloc (*Line*)28 (*Col*)23 (*EndLine*)28 (*EndCol*)23)) :: (122, (sloc (*Line*)32 (*Col*)15 (*EndLine*)32 (*EndCol*)19)) :: (77, (sloc (*Line*)25 (*Col*)13 (*EndLine*)25 (*EndCol*)25)) :: (86, (sloc (*Line*)26 (*Col*)17 (*EndLine*)26 (*EndCol*)20)) :: (113, (sloc (*Line*)31 (*Col*)14 (*EndLine*)31 (*EndCol*)20)) :: (68, (sloc (*Line*)21 (*Col*)33 (*EndLine*)21 (*EndCol*)33)) :: (41, (sloc (*Line*)16 (*Col*)7 (*EndLine*)16 (*EndCol*)10)) :: (50, (sloc (*Line*)19 (*Col*)17 (*EndLine*)19 (*EndCol*)17)) :: (59, (sloc (*Line*)21 (*Col*)13 (*EndLine*)21 (*EndCol*)16)) :: (62, (sloc (*Line*)21 (*Col*)23 (*EndLine*)21 (*EndCol*)23)) :: (53, (sloc (*Line*)21 (*Col*)10 (*EndLine*)21 (*EndCol*)23)) :: (125, (sloc (*Line*)32 (*Col*)24 (*EndLine*)32 (*EndCol*)26)) :: (80, (sloc (*Line*)25 (*Col*)21 (*EndLine*)25 (*EndCol*)25)) :: (89, (sloc (*Line*)26 (*Col*)25 (*EndLine*)26 (*EndCol*)36)) :: (116, (sloc (*Line*)31 (*Col*)14 (*EndLine*)31 (*EndCol*)14)) :: (71, (sloc (*Line*)21 (*Col*)45 (*EndLine*)21 (*EndCol*)45)) :: (98, (sloc (*Line*)28 (*Col*)13 (*EndLine*)28 (*EndCol*)19)) :: (107, (sloc (*Line*)29 (*Col*)21 (*EndLine*)29 (*EndCol*)27)) :: (74, (sloc (*Line*)22 (*Col*)10 (*EndLine*)22 (*EndCol*)15)) :: (65, (sloc (*Line*)21 (*Col*)33 (*EndLine*)21 (*EndCol*)41)) :: (124, (sloc (*Line*)32 (*Col*)24 (*EndLine*)32 (*EndCol*)26)) :: (106, (sloc (*Line*)29 (*Col*)13 (*EndLine*)29 (*EndCol*)16)) :: (118, (sloc (*Line*)31 (*Col*)17 (*EndLine*)31 (*EndCol*)19)) :: (46, (sloc (*Line*)17 (*Col*)16 (*EndLine*)17 (*EndCol*)17)) :: (100, (sloc (*Line*)28 (*Col*)13 (*EndLine*)28 (*EndCol*)13)) :: (109, (sloc (*Line*)29 (*Col*)21 (*EndLine*)29 (*EndCol*)23)) :: (91, (sloc (*Line*)26 (*Col*)25 (*EndLine*)26 (*EndCol*)29)) :: (64, (sloc (*Line*)21 (*Col*)33 (*EndLine*)21 (*EndCol*)45)) :: (55, (sloc (*Line*)21 (*Col*)10 (*EndLine*)21 (*EndCol*)19)) :: (58, (sloc (*Line*)21 (*Col*)13 (*EndLine*)21 (*EndCol*)18)) :: (85, (sloc (*Line*)26 (*Col*)17 (*EndLine*)26 (*EndCol*)41)) :: (94, (sloc (*Line*)26 (*Col*)41 (*EndLine*)26 (*EndCol*)41)) :: (49, (sloc (*Line*)19 (*Col*)7 (*EndLine*)19 (*EndCol*)12)) :: (130, (sloc (*Line*)34 (*Col*)25 (*EndLine*)34 (*EndCol*)27)) :: (103, (sloc (*Line*)28 (*Col*)23 (*EndLine*)28 (*EndCol*)23)) :: (112, (sloc (*Line*)31 (*Col*)14 (*EndLine*)31 (*EndCol*)24)) :: (97, (sloc (*Line*)28 (*Col*)13 (*EndLine*)28 (*EndCol*)19)) :: (79, (sloc (*Line*)25 (*Col*)13 (*EndLine*)25 (*EndCol*)16)) :: (88, (sloc (*Line*)26 (*Col*)24 (*EndLine*)26 (*EndCol*)41)) :: (70, (sloc (*Line*)21 (*Col*)36 (*EndLine*)21 (*EndCol*)40)) :: (61, (sloc (*Line*)21 (*Col*)18 (*EndLine*)21 (*EndCol*)18)) :: (129, (sloc (*Line*)34 (*Col*)25 (*EndLine*)34 (*EndCol*)27)) :: (120, (sloc (*Line*)31 (*Col*)24 (*EndLine*)31 (*EndCol*)24)) :: (60, (sloc (*Line*)21 (*Col*)13 (*EndLine*)21 (*EndCol*)16)) :: (87, (sloc (*Line*)26 (*Col*)17 (*EndLine*)26 (*EndCol*)20)) :: (96, (sloc (*Line*)28 (*Col*)13 (*EndLine*)28 (*EndCol*)23)) :: (123, (sloc (*Line*)32 (*Col*)24 (*EndLine*)32 (*EndCol*)30)) :: (114, (sloc (*Line*)31 (*Col*)14 (*EndLine*)31 (*EndCol*)20)) :: (69, (sloc (*Line*)21 (*Col*)36 (*EndLine*)21 (*EndCol*)40)) :: (78, (sloc (*Line*)25 (*Col*)13 (*EndLine*)25 (*EndCol*)16)) :: (63, (sloc (*Line*)21 (*Col*)23 (*EndLine*)21 (*EndCol*)23)) :: (90, (sloc (*Line*)26 (*Col*)25 (*EndLine*)26 (*EndCol*)29)) :: (45, (sloc (*Line*)17 (*Col*)7 (*EndLine*)17 (*EndCol*)11)) :: (54, (sloc (*Line*)21 (*Col*)10 (*EndLine*)21 (*EndCol*)19)) :: (126, (sloc (*Line*)32 (*Col*)30 (*EndLine*)32 (*EndCol*)30)) :: (72, (sloc (*Line*)21 (*Col*)45 (*EndLine*)21 (*EndCol*)45)) :: (81, (sloc (*Line*)25 (*Col*)21 (*EndLine*)25 (*EndCol*)25)) :: (108, (sloc (*Line*)29 (*Col*)21 (*EndLine*)29 (*EndCol*)23)) :: (117, (sloc (*Line*)31 (*Col*)17 (*EndLine*)31 (*EndCol*)19)) :: (57, (sloc (*Line*)21 (*Col*)10 (*EndLine*)21 (*EndCol*)10)) :: (84, (sloc (*Line*)26 (*Col*)10 (*EndLine*)26 (*EndCol*)12)) :: (93, (sloc (*Line*)26 (*Col*)33 (*EndLine*)26 (*EndCol*)36)) :: (102, (sloc (*Line*)28 (*Col*)16 (*EndLine*)28 (*EndCol*)18)) :: (75, (sloc (*Line*)22 (*Col*)20 (*EndLine*)22 (*EndCol*)20)) :: (66, (sloc (*Line*)21 (*Col*)33 (*EndLine*)21 (*EndCol*)41)) :: (42, (sloc (*Line*)16 (*Col*)16 (*EndLine*)16 (*EndCol*)16)) :: nil)
).

