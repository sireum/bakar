package AbsPackage;


procedure Integer AbsFunc (
        Integer x) {
  local
    Integer r;
    FIXME _t0;
    FIXME _t1;
    FIXME _t2;
    FIXME _t3;
    FIXME _t4;
    FIXME _t5;


  #rwl0.
    _t0 := x;

  #rwl1.
    _t1 := 0ii;

  #l3.
    if !(_t0 < _t1) then goto l2;

  #rwl2.
    _t2 := x;

  #rwl3.
    _t3 := -(1ii);

  #l4.
    r := _t2 * _t3;

  #l5.
    goto l1;

  #l2.
    // empty loc

  #l6.
    r := x;

  #l1.
    // empty loc

  #rwl4.
    _t4 := r;

  #rwl5.
    _t5 := 0ii;

  #l7.
    assert _t4 >= _t5;

  #l8.
    return r;
}package AbsPackage;


procedure Integer AbsFunc (
        Integer x) {

}package Standard;


typealias Boolean standard::boolean;

typealias Integer standard::integer;

typealias Integer standard::natural;

typealias Integer standard::positive;

typealias Float standard::float;

typealias Integer universal_integer;

typealias Float universal_real;