(* Compilation Unit *)
CompilationUnit ( 1,
  (* Compilation Unit - Unit Declaration *)
  UnitDecl( 2,
    (* Function Body Declaration *)
    Sfunc( 3,
      {
        fn_astnum =   
          (* Function Body - AST Number *)
          4; 
        fn_name =
          (* Function Body - Name *)
           (*Prime*) 1;
        fn_ret_type = 
          (* Function Body - Return Type *)
          Tint;
        fn_specs = 
          (* Function Body - Specification *)
          None;
        fn_params = 
          (* Function Body - Parameters *)
          Some([
                { param_astnum = 5; param_idents = [ (*N*) 1]; param_typenum = 1; param_mode = In; param_init = None }
              ]);
        fn_loc_idents = 
          (* Function Body - Locally Defined Variables *)
          Some([
                { local_astnum = 6; local_idents = [ (*Result*) 2]; local_typenum = 1; local_init = None }; 
                { local_astnum = 7; local_idents = [ (*I*) 3]; local_typenum = 1; local_init = None }; 
                { local_astnum = 8; local_idents = [ (*T*) 4]; local_typenum = 1; local_init = None }
              ]);
        fn_body = 
          (* Function Body - Body *)
          Sseq (9,
            Sassign (10,  (*Result*) 2, Econst (11, 0)),
            Sseq (12,
              Sifthen (13, Ebinop (14, Oor, Ebinop (15, Ceq, Evar (16,  (*N*) 1), Econst (17, 1)), Ebinop (18, Ceq, Evar (19,  (*N*) 1), Econst (20, 2))),
                Sassign (21,  (*Result*) 2, Econst (22, 1))
              ),
              Sseq (23,
                Sassign (24,  (*I*) 3, Econst (25, 2)),
                Sseq (26,
                  Swhile (27, Ebinop (28, Oand, Ebinop (29, Clt, Evar (30,  (*I*) 3), Evar (31,  (*N*) 1)), Ebinop (32, Ceq, Evar (33,  (*Result*) 2), Econst (34, 0))),
                    Sseq (35,
                      Sassign (36,  (*T*) 4, Ebinop (37, Odiv, Evar (38,  (*N*) 1), Evar (39,  (*I*) 3))),
                      Sifthen (40, Ebinop (41, Ceq, Evar (42,  (*N*) 1), Ebinop (43, Omul, Evar (44,  (*T*) 4), Evar (45,  (*I*) 3))),
                        Sassign (46,  (*Result*) 2, Econst (47, 1))
                      ) )
                  ),
                  Sreturn (48, (Some (Evar (49,  (*Result*) 2)))) ) ) ) )
      }
    )
  ),  
  (* Compilation Unit - Type Table *)
  {
    tt_exptype_table = 
      (* Expression AstNum --> TypeNum *) 
      [
        (11, 2) ;
        (14, 3) ;
        (15, 3) ;
        (16, 1) ;
        (17, 2) ;
        (18, 3) ;
        (19, 1) ;
        (20, 2) ;
        (22, 2) ;
        (25, 2) ;
        (28, 3) ;
        (29, 3) ;
        (30, 1) ;
        (31, 1) ;
        (32, 3) ;
        (33, 1) ;
        (34, 2) ;
        (37, 1) ;
        (38, 1) ;
        (39, 1) ;
        (41, 3) ;
        (42, 1) ;
        (43, 1) ;
        (44, 1) ;
        (45, 1) ;
        (47, 2) ;
        (49, 1)
      ];
    tt_typename_table = 
      (* TypeNum --> (Type URI * (Type Declaration AST Num) Option) *) 
      [
        (1, ("ada://ordinary_type/Standard-1:1/Integer-1:1", None)) ;
        (2, ("universal_integer", None)) ;
        (3, ("ada://ordinary_type/Standard-1:1/Boolean-1:1", None))
      ]
  }
)