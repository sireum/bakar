package Example;


procedure add (
        Integer x,
        Integer y) {
  local
    FIXME _t0;
    FIXME _t1;


  #rwl0.
    _t0 := x;

  #rwl1.
    _t1 := y;

  #l0.
    x := _t0 + _t1;

  #l1.
    return;
}

procedure foo (
        Integer A,
        Integer B) {
  local
    Integer M;
    FIXME _t2;
    FIXME _t3;
    FIXME _t4;
    FIXME _t5;


  #l2.
    M := 3ii;

  #l3.
    call add (A, M);

  #l4.
    call add (B, 5ii);

  #rwl2.
    _t2 := A;

  #rwl3.
    _t3 := 2ii;

  #l5.
    A := _t2 + _t3;

  #rwl4.
    _t4 := B;

  #rwl5.
    _t5 := 5ii;

  #l6.
    B := _t4 + _t5;

  #l7.
    return;
}package Example;


procedure add (
        Integer x,
        Integer y) {

}

procedure foo (
        Integer A,
        Integer B) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;