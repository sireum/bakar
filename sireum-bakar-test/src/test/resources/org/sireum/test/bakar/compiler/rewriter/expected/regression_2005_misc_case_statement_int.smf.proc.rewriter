package Case_Statement_Int;


procedure Activity isWorkDay (
        Integer d) {
  local
    Activity ret;


  #l2.
    if !(attribute__uif__first `IntType <= d &&& d <= attribute__uif__last `IntType) then goto l1;

  #l3.
    ret := Work;

  #l4.
    goto l0;

  #l1.
    // empty loc

  #l6.
    if !(4ii <= d &&& d <= 5ii ||| attribute__uif__first `SixType <= d &&& d <= attribute__uif__last `SixType ||| d == 7ii) then goto l5;

  #l7.
    ret := Party;

  #l8.
    goto l0;

  #l5.
    // empty loc

  #l10.
    if !(8ii <= d &&& d <= 9ii) then goto l9;

  #l11.
    ret := Party;

  #l12.
    goto l0;

  #l9.
    // empty loc

  #l14.
    if !(d == 10ii) then goto l13;

  #l15.
    ret := Work;

  #l16.
    goto l0;

  #l13.
    // empty loc

  #l18.
    ret := Drink;

  #l0.
    // empty loc

  #l19.
    return ret;
}package Case_Statement_Int;


enum Activity {
  Work, Party, Drink
}

typealias Integer IntType;

typealias Integer SixType;

procedure Activity isWorkDay (
        Integer d) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;