package Dependence_Test_Suite_02;


procedure Success0 (
        Integer O) {

  #l0.
    O := 5ii;

  #l1.
    return;
}

procedure Success1 (
        Integer I,
        Integer O) {

  #l2.
    O := I;

  #l3.
    return;
}

procedure Success2 (
        Integer I,
        Integer O) {
  local
    Integer L;


  #l4.
    L := I;

  #l5.
    O := L;

  #l6.
    return;
}

procedure Success3 (
        Integer I,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    Integer L3;


  #l7.
    L1 := I;

  #l8.
    L2 := L1;

  #l9.
    L3 := L2;

  #l10.
    O := L3;

  #l11.
    return;
}

procedure Success4 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    Integer L3;
    FIXME _t0;
    FIXME _t1;


  #l12.
    L1 := I1;

  #l13.
    L2 := I2;

  #rwl0.
    _t0 := L1;

  #rwl1.
    _t1 := L2;

  #l14.
    L3 := _t0 + _t1;

  #l15.
    O := L3;

  #l16.
    return;
}

procedure Success5 (
        Integer I1,
        Integer I2,
        Integer O1,
        Integer O2) {
  local
    Integer L1;
    Integer L2;
    Integer L3;
    FIXME _t2;
    FIXME _t3;


  #l17.
    O1 := I2;

  #l18.
    L1 := I1;

  #l19.
    L2 := L1;

  #rwl2.
    _t2 := L1;

  #rwl3.
    _t3 := L2;

  #l20.
    L3 := _t2 + _t3;

  #l21.
    O2 := O1;

  #l22.
    O1 := L3;

  #l23.
    return;
}

procedure Success6 (
        Integer I1,
        Integer I2,
        Integer O1,
        Integer O2) {
  local
    FIXME _t4;
    FIXME _t5;


  #l24.
    O1 := I1;

  #rwl4.
    _t4 := I2;

  #rwl5.
    _t5 := 5ii;

  #l27.
    if !(_t4 > _t5) then goto l26;

  #l28.
    O2 := 5ii;

  #l29.
    goto l25;

  #l26.
    // empty loc

  #l30.
    O2 := 5ii;

  #l25.
    // empty loc

  #l31.
    return;
}

procedure Success7 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    FIXME _t6;
    FIXME _t7;


  #l32.
    L1 := I1;

  #rwl6.
    _t6 := L1;

  #rwl7.
    _t7 := I2;

  #l35.
    if !(_t6 > _t7) then goto l34;

  #l36.
    O := 6ii;

  #l37.
    goto l33;

  #l34.
    // empty loc

  #l38.
    O := 7ii;

  #l33.
    // empty loc

  #l39.
    return;
}

procedure Success8 (
        Integer I1,
        Integer I2,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    FIXME _t8;
    FIXME _t9;


  #l40.
    L1 := I1;

  #rwl8.
    _t8 := L1;

  #rwl9.
    _t9 := 5ii;

  #l43.
    if !(_t8 > _t9) then goto l42;

  #l44.
    L2 := 6ii;

  #l45.
    goto l41;

  #l42.
    // empty loc

  #l46.
    L2 := I2;

  #l41.
    // empty loc

  #l47.
    O := L2;

  #l48.
    return;
}

procedure Success9 (
        Integer I1,
        Integer I2,
        Integer I3,
        Integer O) {
  local
    Integer L1;
    Integer L2;
    FIXME _t10;
    FIXME _t11;
    FIXME _t12;
    FIXME _t13;


  #l49.
    L1 := I1;

  #rwl10.
    _t10 := L1;

  #rwl11.
    _t11 := 5ii;

  #l52.
    if !(_t10 > _t11) then goto l51;

  #l53.
    L2 := 6ii;

  #l54.
    goto l50;

  #l51.
    // empty loc

  #rwl12.
    _t12 := I2;

  #rwl13.
    _t13 := 0ii;

  #l57.
    if !(_t12 < _t13) then goto l56;

  #l58.
    L2 := I3;

  #l59.
    goto l55;

  #l56.
    // empty loc

  #l60.
    L2 := 7ii;

  #l55.
    // empty loc

  #l50.
    // empty loc

  #l61.
    O := L2;

  #l62.
    return;
}

procedure Success10 (
        Integer I1,
        Integer I2,
        Integer I3,
        Integer O1,
        Integer O2) {
  local
    Integer L1;
    Integer L2;
    FIXME _t14;
    FIXME _t15;
    FIXME _t16;
    FIXME _t17;


  #l63.
    L2 := 5ii;

  #l64.
    L1 := I3;

  #l65.
    O2 := L1;

  #l66.
    L1 := I2;

  #rwl14.
    _t14 := L1;

  #rwl15.
    _t15 := 5ii;

  #l68.
    if !(_t14 > _t15) then goto l67;

  #rwl16.
    _t16 := I1;

  #rwl17.
    _t17 := 0ii;

  #l71.
    if !(_t16 < _t17) then goto l70;

  #l72.
    L2 := 8ii;

  #l73.
    goto l69;

  #l70.
    // empty loc

  #l74.
    L2 := 7ii;

  #l69.
    // empty loc

  #l67.
    // empty loc

  #l75.
    O1 := L2;

  #l76.
    return;
}

procedure Success11 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    FIXME _t18;
    FIXME _t19;
    FIXME _t20;
    FIXME _t21;
    FIXME _t22;
    FIXME _t23;


  #l77.
    J := 1ii;

  #l78.
    Sum := 0ii;

  #l80.
    // empty loc

  #rwl18.
    _t18 := J;

  #rwl19.
    _t19 := I1;

  #l81.
    if !(_t18 <= _t19) then goto l79;

  #rwl20.
    _t20 := Sum;

  #rwl21.
    _t21 := J;

  #l82.
    Sum := _t20 + _t21;

  #rwl22.
    _t22 := J;

  #rwl23.
    _t23 := 1ii;

  #l83.
    J := _t22 + _t23;

  #l84.
    goto l80;

  #l79.
    // empty loc

  #l85.
    O1 := Sum;

  #l86.
    return;
}

procedure Success12 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    FIXME _t24;
    FIXME _t25;
    FIXME _t26;
    FIXME _t27;
    FIXME _t28;
    FIXME _t29;
    FIXME _t30;
    FIXME _t31;


  #l87.
    J := 1ii;

  #l88.
    Sum := 0ii;

  #l90.
    // empty loc

  #rwl24.
    _t24 := J;

  #rwl25.
    _t25 := I1;

  #l91.
    if !(_t24 <= _t25) then goto l89;

  #rwl26.
    _t26 := Sum;

  #rwl27.
    _t27 := J;

  #l92.
    Sum := _t26 + _t27;

  #rwl28.
    _t28 := Sum;

  #rwl29.
    _t29 := I2;

  #l94.
    if !(_t28 > _t29) then goto l93;

  #l95.
    Sum := 0ii;

  #l93.
    // empty loc

  #rwl30.
    _t30 := J;

  #rwl31.
    _t31 := 1ii;

  #l96.
    J := _t30 + _t31;

  #l97.
    goto l90;

  #l89.
    // empty loc

  #l98.
    O1 := Sum;

  #l99.
    return;
}

procedure Success13 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J1;
    Integer J2;
    FIXME _t32;
    FIXME _t33;
    FIXME _t34;
    FIXME _t35;
    FIXME _t36;
    FIXME _t37;
    FIXME _t38;
    FIXME _t39;
    FIXME _t40;
    FIXME _t41;
    FIXME _t42;
    FIXME _t43;


  #l100.
    J1 := 1ii;

  #l101.
    J2 := 1ii;

  #l102.
    Sum := 0ii;

  #l104.
    // empty loc

  #rwl32.
    _t32 := J1;

  #rwl33.
    _t33 := I1;

  #l105.
    if !(_t32 <= _t33) then goto l103;

  #l107.
    // empty loc

  #rwl34.
    _t34 := J2;

  #rwl35.
    _t35 := I2;

  #l108.
    if !(_t34 <= _t35) then goto l106;

  #rwl36.
    _t36 := J1;

  #rwl37.
    _t37 := J2;

  #rwl38.
    _t38 := Sum;

  #rwl39.
    _t39 := _t36 * _t37;

  #l109.
    Sum := _t38 + _t39;

  #rwl40.
    _t40 := J2;

  #rwl41.
    _t41 := 1ii;

  #l110.
    J2 := _t40 + _t41;

  #l111.
    goto l107;

  #l106.
    // empty loc

  #rwl42.
    _t42 := J1;

  #rwl43.
    _t43 := 1ii;

  #l112.
    J1 := _t42 + _t43;

  #l113.
    goto l104;

  #l103.
    // empty loc

  #l114.
    O1 := Sum;

  #l115.
    return;
}

procedure Success14 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer L1;
    Integer L2;
    FIXME _t44;
    FIXME _t45;
    FIXME _t46;
    FIXME _t47;
    FIXME _t48;
    FIXME _t49;
    FIXME _t50;
    FIXME _t51;


  #l116.
    J := 1ii;

  #l117.
    Sum := 0ii;

  #l118.
    L2 := 0ii;

  #l120.
    // empty loc

  #rwl44.
    _t44 := J;

  #rwl45.
    _t45 := I1;

  #l121.
    if !(_t44 <= _t45) then goto l119;

  #rwl46.
    _t46 := Sum;

  #rwl47.
    _t47 := J;

  #l122.
    Sum := _t46 + _t47;

  #l123.
    L1 := Sum;

  #l124.
    L2 := L1;

  #rwl48.
    _t48 := J;

  #rwl49.
    _t49 := 1ii;

  #l125.
    J := _t48 + _t49;

  #l126.
    goto l120;

  #l119.
    // empty loc

  #rwl50.
    _t50 := Sum;

  #rwl51.
    _t51 := L2;

  #l127.
    O1 := _t50 + _t51;

  #l128.
    return;
}

procedure Success15 (
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer _tcomp0;
    Integer _tcomp1;
    FIXME _t52;
    FIXME _t53;
    FIXME _t54;
    FIXME _t55;
    FIXME _t56;
    FIXME _t57;
    FIXME _t58;
    FIXME _t59;


  #l129.
    Sum := 0ii;

  #l131.
    _tcomp0 := 1ii;

  #l132.
    _tcomp1 := 10ii;

  #rwl52.
    _t52 := _tcomp0;

  #rwl53.
    _t53 := _tcomp1;

  #l133.
    if _t52 > _t53 then goto l130;

  #l134.
    J := _tcomp0;

  #l135.
    // empty loc

  #rwl54.
    _t54 := Sum;

  #rwl55.
    _t55 := J;

  #l136.
    Sum := _t54 + _t55;

  #rwl56.
    _t56 := J;

  #rwl57.
    _t57 := _tcomp1;

  #l137.
    if _t56 == _t57 then goto l130;

  #rwl58.
    _t58 := J;

  #rwl59.
    _t59 := 1ii;

  #l138.
    J := _t58 + _t59;

  #l139.
    goto l135;

  #l130.
    // empty loc

  #l140.
    O1 := Sum;

  #l141.
    return;
}

procedure Success16 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer _tcomp2;
    Integer _tcomp3;
    FIXME _t60;
    FIXME _t61;
    FIXME _t62;
    FIXME _t63;
    FIXME _t64;
    FIXME _t65;
    FIXME _t66;
    FIXME _t67;


  #l142.
    Sum := 0ii;

  #l144.
    _tcomp2 := 1ii;

  #l145.
    _tcomp3 := I1;

  #rwl60.
    _t60 := _tcomp2;

  #rwl61.
    _t61 := _tcomp3;

  #l146.
    if _t60 > _t61 then goto l143;

  #l147.
    J := _tcomp3;

  #l148.
    // empty loc

  #rwl62.
    _t62 := Sum;

  #rwl63.
    _t63 := J;

  #l149.
    Sum := _t62 + _t63;

  #rwl64.
    _t64 := J;

  #rwl65.
    _t65 := _tcomp2;

  #l150.
    if _t64 == _t65 then goto l143;

  #rwl66.
    _t66 := J;

  #rwl67.
    _t67 := 1ii;

  #l151.
    J := _t66 - _t67;

  #l152.
    goto l148;

  #l143.
    // empty loc

  #l153.
    O1 := Sum;

  #l154.
    return;
}

procedure Success17 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer _tcomp4;
    Integer _tcomp5;
    FIXME _t68;
    FIXME _t69;
    FIXME _t70;
    FIXME _t71;
    FIXME _t72;
    FIXME _t73;
    FIXME _t74;
    FIXME _t75;
    FIXME _t76;
    FIXME _t77;


  #l155.
    Sum := 0ii;

  #l157.
    _tcomp4 := 1ii;

  #l158.
    _tcomp5 := I1;

  #rwl68.
    _t68 := _tcomp4;

  #rwl69.
    _t69 := _tcomp5;

  #l159.
    if _t68 > _t69 then goto l156;

  #l160.
    J := _tcomp4;

  #l161.
    // empty loc

  #rwl70.
    _t70 := Sum;

  #rwl71.
    _t71 := J;

  #l162.
    Sum := _t70 + _t71;

  #rwl72.
    _t72 := Sum;

  #rwl73.
    _t73 := I2;

  #l164.
    if !(_t72 > _t73) then goto l163;

  #l165.
    Sum := 0ii;

  #l163.
    // empty loc

  #rwl74.
    _t74 := J;

  #rwl75.
    _t75 := _tcomp5;

  #l166.
    if _t74 == _t75 then goto l156;

  #rwl76.
    _t76 := J;

  #rwl77.
    _t77 := 1ii;

  #l167.
    J := _t76 + _t77;

  #l168.
    goto l161;

  #l156.
    // empty loc

  #l169.
    O1 := Sum;

  #l170.
    return;
}

procedure Success18 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J1;
    Integer _tcomp6;
    Integer _tcomp7;
    Integer J2;
    Integer _tcomp8;
    Integer _tcomp9;
    FIXME _t78;
    FIXME _t79;
    FIXME _t80;
    FIXME _t81;
    FIXME _t82;
    FIXME _t83;
    FIXME _t84;
    FIXME _t85;
    FIXME _t86;
    FIXME _t87;
    FIXME _t88;
    FIXME _t89;
    FIXME _t90;
    FIXME _t91;
    FIXME _t92;
    FIXME _t93;


  #l171.
    Sum := 0ii;

  #l173.
    _tcomp6 := 1ii;

  #l174.
    _tcomp7 := I1;

  #rwl78.
    _t78 := _tcomp6;

  #rwl79.
    _t79 := _tcomp7;

  #l175.
    if _t78 > _t79 then goto l172;

  #l176.
    J1 := _tcomp6;

  #l177.
    // empty loc

  #l179.
    _tcomp8 := 1ii;

  #l180.
    _tcomp9 := I2;

  #rwl80.
    _t80 := _tcomp8;

  #rwl81.
    _t81 := _tcomp9;

  #l181.
    if _t80 > _t81 then goto l178;

  #l182.
    J2 := _tcomp8;

  #l183.
    // empty loc

  #rwl82.
    _t82 := J1;

  #rwl83.
    _t83 := J2;

  #rwl84.
    _t84 := Sum;

  #rwl85.
    _t85 := _t82 * _t83;

  #l184.
    Sum := _t84 + _t85;

  #rwl86.
    _t86 := J2;

  #rwl87.
    _t87 := _tcomp9;

  #l185.
    if _t86 == _t87 then goto l178;

  #rwl88.
    _t88 := J2;

  #rwl89.
    _t89 := 1ii;

  #l186.
    J2 := _t88 + _t89;

  #l187.
    goto l183;

  #l178.
    // empty loc

  #rwl90.
    _t90 := J1;

  #rwl91.
    _t91 := _tcomp7;

  #l188.
    if _t90 == _t91 then goto l172;

  #rwl92.
    _t92 := J1;

  #rwl93.
    _t93 := 1ii;

  #l189.
    J1 := _t92 + _t93;

  #l190.
    goto l177;

  #l172.
    // empty loc

  #l191.
    O1 := Sum;

  #l192.
    return;
}

procedure Success19 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J1;
    Integer _tcomp10;
    Integer _tcomp11;
    FIXME _t94;
    FIXME _t95;
    FIXME _t96;
    FIXME _t97;
    FIXME _t98;
    FIXME _t99;
    FIXME _t100;
    FIXME _t101;
    FIXME _t102;
    FIXME _t103;
    FIXME _t104;
    FIXME _t105;


  #l193.
    Sum := 0ii;

  #rwl94.
    _t94 := Sum;

  #rwl95.
    _t95 := 1ii;

  #l195.
    _tcomp10 := _t94 + _t95;

  #rwl96.
    _t96 := I1;

  #rwl97.
    _t97 := I2;

  #l196.
    _tcomp11 := _t96 * _t97;

  #rwl98.
    _t98 := _tcomp10;

  #rwl99.
    _t99 := _tcomp11;

  #l197.
    if _t98 > _t99 then goto l194;

  #l198.
    J1 := _tcomp10;

  #l199.
    // empty loc

  #rwl100.
    _t100 := Sum;

  #rwl101.
    _t101 := J1;

  #l200.
    Sum := _t100 + _t101;

  #rwl102.
    _t102 := J1;

  #rwl103.
    _t103 := _tcomp11;

  #l201.
    if _t102 == _t103 then goto l194;

  #rwl104.
    _t104 := J1;

  #rwl105.
    _t105 := 1ii;

  #l202.
    J1 := _t104 + _t105;

  #l203.
    goto l199;

  #l194.
    // empty loc

  #l204.
    O1 := Sum;

  #l205.
    return;
}

procedure Success20 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    FIXME _t106;
    FIXME _t107;
    FIXME _t108;
    FIXME _t109;
    FIXME _t110;
    FIXME _t111;


  #l206.
    J := 1ii;

  #l207.
    Sum := 0ii;

  #l208.
    // empty loc

  #rwl106.
    _t106 := Sum;

  #rwl107.
    _t107 := J;

  #l210.
    Sum := _t106 + _t107;

  #rwl108.
    _t108 := J;

  #rwl109.
    _t109 := 1ii;

  #l211.
    J := _t108 + _t109;

  #rwl110.
    _t110 := J;

  #rwl111.
    _t111 := I1;

  #l212.
    if _t110 >= _t111 then goto l209;

  #l213.
    goto l208;

  #l209.
    // empty loc

  #l214.
    O1 := Sum;

  #l215.
    return;
}

procedure Success21 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    FIXME _t112;
    FIXME _t113;
    FIXME _t114;
    FIXME _t115;
    FIXME _t116;
    FIXME _t117;


  #l216.
    J := 1ii;

  #l217.
    Sum := 0ii;

  #l218.
    // empty loc

  #rwl112.
    _t112 := Sum;

  #rwl113.
    _t113 := J;

  #l220.
    Sum := _t112 + _t113;

  #rwl114.
    _t114 := J;

  #rwl115.
    _t115 := 1ii;

  #l221.
    J := _t114 + _t115;

  #rwl116.
    _t116 := J;

  #rwl117.
    _t117 := I1;

  #l223.
    if !(_t116 >= _t117) then goto l222;

  #l224.
    goto l219;

  #l222.
    // empty loc

  #l225.
    goto l218;

  #l219.
    // empty loc

  #l226.
    O1 := Sum;

  #l227.
    return;
}

procedure Success22 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    FIXME _t118;
    FIXME _t119;
    FIXME _t120;
    FIXME _t121;
    FIXME _t122;
    FIXME _t123;
    FIXME _t124;
    FIXME _t125;


  #l228.
    J := 1ii;

  #l229.
    Sum := 0ii;

  #l230.
    // empty loc

  #rwl118.
    _t118 := J;

  #rwl119.
    _t119 := I1;

  #l232.
    if _t118 > _t119 then goto l231;

  #rwl120.
    _t120 := Sum;

  #rwl121.
    _t121 := J;

  #l233.
    Sum := _t120 + _t121;

  #rwl122.
    _t122 := Sum;

  #rwl123.
    _t123 := I2;

  #l235.
    if !(_t122 > _t123) then goto l234;

  #l236.
    Sum := 0ii;

  #l234.
    // empty loc

  #rwl124.
    _t124 := J;

  #rwl125.
    _t125 := 1ii;

  #l237.
    J := _t124 + _t125;

  #l238.
    goto l230;

  #l231.
    // empty loc

  #l239.
    O1 := Sum;

  #l240.
    return;
}

procedure Success23 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J1;
    Integer J2;
    FIXME _t126;
    FIXME _t127;
    FIXME _t128;
    FIXME _t129;
    FIXME _t130;
    FIXME _t131;
    FIXME _t132;
    FIXME _t133;
    FIXME _t134;
    FIXME _t135;
    FIXME _t136;
    FIXME _t137;


  #l241.
    J1 := 1ii;

  #l242.
    J2 := 1ii;

  #l243.
    Sum := 0ii;

  #l244.
    // empty loc

  #l246.
    // empty loc

  #rwl126.
    _t126 := J1;

  #rwl127.
    _t127 := J2;

  #rwl128.
    _t128 := Sum;

  #rwl129.
    _t129 := _t126 * _t127;

  #l248.
    Sum := _t128 + _t129;

  #rwl130.
    _t130 := J2;

  #rwl131.
    _t131 := I2;

  #l249.
    if _t130 > _t131 then goto l247;

  #rwl132.
    _t132 := J2;

  #rwl133.
    _t133 := 1ii;

  #l250.
    J2 := _t132 + _t133;

  #l251.
    goto l246;

  #l247.
    // empty loc

  #rwl134.
    _t134 := J1;

  #rwl135.
    _t135 := 1ii;

  #l252.
    J1 := _t134 + _t135;

  #rwl136.
    _t136 := J1;

  #rwl137.
    _t137 := I1;

  #l253.
    if _t136 > _t137 then goto l245;

  #l254.
    goto l244;

  #l245.
    // empty loc

  #l255.
    O1 := Sum;

  #l256.
    return;
}

procedure Success24 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    FIXME _t138;
    FIXME _t139;
    FIXME _t140;
    FIXME _t141;
    FIXME _t142;
    FIXME _t143;
    FIXME _t144;
    FIXME _t145;
    FIXME _t146;
    FIXME _t147;
    FIXME _t148;
    FIXME _t149;


  #l257.
    J := 1ii;

  #l258.
    Sum := 0ii;

  #l259.
    // empty loc

  #rwl138.
    _t138 := Sum;

  #rwl139.
    _t139 := J;

  #l261.
    Sum := _t138 + _t139;

  #rwl140.
    _t140 := Sum;

  #rwl141.
    _t141 := J;

  #rwl142.
    _t142 := 100ii;

  #rwl143.
    _t143 := J;

  #rwl144.
    _t144 := _t140 - _t141;

  #rwl145.
    _t145 := _t142 + _t143;

  #l262.
    if _t144 > _t145 then goto l260;

  #rwl146.
    _t146 := J;

  #rwl147.
    _t147 := 1ii;

  #l263.
    J := _t146 + _t147;

  #rwl148.
    _t148 := J;

  #rwl149.
    _t149 := I1;

  #l264.
    if _t148 > _t149 then goto l260;

  #l265.
    goto l259;

  #l260.
    // empty loc

  #l266.
    O1 := Sum;

  #l267.
    return;
}

procedure Success25 (
        Integer I1,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    FIXME _t150;
    FIXME _t151;
    FIXME _t152;
    FIXME _t153;
    FIXME _t154;
    FIXME _t155;


  #l268.
    J := 1ii;

  #l269.
    Sum := 0ii;

  #l270.
    // empty loc

  #rwl150.
    _t150 := Sum;

  #rwl151.
    _t151 := J;

  #l272.
    Sum := _t150 + _t151;

  #rwl152.
    _t152 := J;

  #rwl153.
    _t153 := 1ii;

  #l273.
    J := _t152 + _t153;

  #rwl154.
    _t154 := J;

  #rwl155.
    _t155 := I1;

  #l274.
    if _t154 >= _t155 then goto l271;

  #l275.
    goto l270;

  #l271.
    // empty loc

  #l276.
    O1 := Sum;

  #l277.
    return;
}

procedure Success26 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    FIXME _t156;
    FIXME _t157;
    FIXME _t158;
    FIXME _t159;
    FIXME _t160;
    FIXME _t161;
    FIXME _t162;
    FIXME _t163;


  #l278.
    J := 1ii;

  #l279.
    Sum := 0ii;

  #l281.
    // empty loc

  #rwl156.
    _t156 := J;

  #rwl157.
    _t157 := I1;

  #l282.
    if !(_t156 <= _t157) then goto l280;

  #rwl158.
    _t158 := Sum;

  #rwl159.
    _t159 := J;

  #l283.
    Sum := _t158 + _t159;

  #rwl160.
    _t160 := Sum;

  #rwl161.
    _t161 := I2;

  #l284.
    if _t160 > _t161 then goto l280;

  #rwl162.
    _t162 := J;

  #rwl163.
    _t163 := 1ii;

  #l285.
    J := _t162 + _t163;

  #l286.
    goto l281;

  #l280.
    // empty loc

  #l287.
    O1 := Sum;

  #l288.
    return;
}

procedure Success27 (
        Integer I1,
        Integer I2,
        Integer O1) {
  local
    Integer Sum;
    Integer J;
    Integer _tcomp12;
    Integer _tcomp13;
    FIXME _t164;
    FIXME _t165;
    FIXME _t166;
    FIXME _t167;
    FIXME _t168;
    FIXME _t169;
    FIXME _t170;
    FIXME _t171;
    FIXME _t172;
    FIXME _t173;


  #l289.
    Sum := 0ii;

  #l291.
    _tcomp12 := 1ii;

  #l292.
    _tcomp13 := I1;

  #rwl164.
    _t164 := _tcomp12;

  #rwl165.
    _t165 := _tcomp13;

  #l293.
    if _t164 > _t165 then goto l290;

  #l294.
    J := _tcomp12;

  #l295.
    // empty loc

  #rwl166.
    _t166 := Sum;

  #rwl167.
    _t167 := J;

  #l296.
    Sum := _t166 + _t167;

  #rwl168.
    _t168 := Sum;

  #rwl169.
    _t169 := I2;

  #l297.
    if _t168 > _t169 then goto l290;

  #rwl170.
    _t170 := J;

  #rwl171.
    _t171 := _tcomp13;

  #l298.
    if _t170 == _t171 then goto l290;

  #rwl172.
    _t172 := J;

  #rwl173.
    _t173 := 1ii;

  #l299.
    J := _t172 + _t173;

  #l300.
    goto l295;

  #l290.
    // empty loc

  #l301.
    O1 := Sum;

  #l302.
    return;
}package Dependence_Test_Suite_02;


procedure Success0 (
        Integer O) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;