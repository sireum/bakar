(* Compilation Unit *)
CompilationUnit 1
  (* Compilation Unit - Unit Declaration *) (
    UnitDecl 2 (
      (* Function Body Declaration *)
      Sfunc 3 (
        mkfunction_body 4
          (* Function Body - Name *)
          (*Prime*) 1
          (* Function Body - Return Type *) 
          (Tint) 
          (* Function Body - Specification *)
          (None)
          (* Function Body - Parameters *)
          (Some(
            mkparam_specification 5 ((*N*) 1 :: nil) (1) (In) None :: nil
          ))
          (* Function Body - Local Defined Variables *)
          (Some(
            mklocal_declaration 6 ((*Result*) 2 :: nil) 1 None :: 
            mklocal_declaration 7 ((*I*) 3 :: nil) 1 None :: 
            mklocal_declaration 8 ((*T*) 4 :: nil) 1 None :: nil
          ))
          (* Function Body - Body *) (
            Sseq 9 (
              Sassign 10 ((*Result*) 2) (Econst 11 (Ointconst 0)) ) ( 
              Sseq 12 (
                Sifthen 13 (Ebinop 14 Oor (Ebinop 15 Ceq (Evar 16 (*N*) 1) (Econst 17 (Ointconst 1))) (Ebinop 18 Ceq (Evar 19 (*N*) 1) (Econst 20 (Ointconst 2)))) (
                    Sassign 21 ((*Result*) 2) (Econst 22 (Ointconst 1))
                  ) ) ( 
                Sseq 23 (
                  Sassign 24 ((*I*) 3) (Econst 25 (Ointconst 2)) ) ( 
                  Sseq 26 (
                    Swhile 27 (Ebinop 28 Oand (Ebinop 29 Clt (Evar 30 (*I*) 3) (Evar 31 (*N*) 1)) (Ebinop 32 Ceq (Evar 33 (*Result*) 2) (Econst 34 (Ointconst 0)))) (
                        Sseq 35 (
                          Sassign 36 ((*T*) 4) (Ebinop 37 Odiv (Evar 38 (*N*) 1) (Evar 39 (*I*) 3)) ) ( 
                          Sifthen 40 (Ebinop 41 Ceq (Evar 42 (*N*) 1) (Ebinop 43 Omul (Evar 44 (*T*) 4) (Evar 45 (*I*) 3))) (
                              Sassign 46 ((*Result*) 2) (Econst 47 (Ointconst 1))
                            ) )
                      ) ) ( 
                    Sreturn 48 (Some (Evar 49 (*Result*) 2)) ) ) ) )
          )
      )
    )
  )
  (* Compilation Unit - Type Table *) (
    mktype_table (
      (* Expression Type Table: Expression AstNum --> TypeNum *)
      (11, 2) ::
      (14, 3) ::
      (15, 3) ::
      (16, 1) ::
      (17, 2) ::
      (18, 3) ::
      (19, 1) ::
      (20, 2) ::
      (22, 2) ::
      (25, 2) ::
      (28, 3) ::
      (29, 3) ::
      (30, 1) ::
      (31, 1) ::
      (32, 3) ::
      (33, 1) ::
      (34, 2) ::
      (37, 1) ::
      (38, 1) ::
      (39, 1) ::
      (41, 3) ::
      (42, 1) ::
      (43, 1) ::
      (44, 1) ::
      (45, 1) ::
      (47, 2) ::
      (49, 1) :: nil
    ) (
      (* Type Name Table: TypeNum --> (Type URI * Option(Type Declaration AST Num)) *)
      (1, ("ada://ordinary_type/Standard-1:1/Integer-1:1"%string, None)) ::
      (2, ("universal_integer"%string, None)) ::
      (3, ("ada://ordinary_type/Standard-1:1/Boolean-1:1"%string, None)) :: nil
    )
  )