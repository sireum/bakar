(* Compilation Unit *)
CompilationUnit ( 1,
  (* Compilation Unit - Unit Declaration *)
  UnitDecl( 2,
    (* Function Body Declaration *)
    Sfunc( 3,
      {
        fn_astnum =   
          (* Function Body - AST Number *)
          4; 
        fn_name =
          (* Function Body - Name *)
           (*Odd*) 1;
        fn_ret_type = 
          (* Function Body - Return Type *)
          Tint;
        fn_specs = 
          (* Function Body - Specification *)
          [];
        fn_params = 
          (* Function Body - Parameters *)
          [
          { param_astnum = 5; param_ident =  (*X*) 1; param_typenum = 1; param_mode = In; param_init = None }];
        fn_loc_idents = 
          (* Function Body - Locally Defined Variables *)
          [
          { local_astnum = 6; local_ident =  (*Result*) 2; local_typenum = 1; local_init = None }; 
          { local_astnum = 7; local_ident =  (*T*) 3; local_typenum = 1; local_init = None }];
        fn_body = 
          (* Function Body - Body *)
          Sseq (8,
            Sassign (9,  (*Result*) 2, Econst (10, 1)),
            Sseq (11,
              Sassign (12,  (*T*) 3, Ebinop (13, Odiv, Evar (14,  (*X*) 1), Econst (15, 2))),
              Sseq (16,
                Sifthen (17, Ebinop (18, Ceq, Evar (19,  (*X*) 1), Ebinop (20, Omul, Evar (21,  (*T*) 3), Econst (22, 2))),
                  Sassign (23,  (*Result*) 2, Econst (24, 0))
                ),
                Sreturn (25, (Some (Evar (26,  (*Result*) 2)))) ) ) )
      }
    )
  ),  
  (* Compilation Unit - Type Table *)
  {
    tt_exptype_table = 
      (* Expression AstNum --> TypeNum *) 
      [
        (10, 2) ;
        (13, 1) ;
        (14, 1) ;
        (15, 2) ;
        (18, 3) ;
        (19, 1) ;
        (20, 1) ;
        (21, 1) ;
        (22, 2) ;
        (24, 2) ;
        (26, 1)
      ];
    tt_typename_table = 
      (* TypeNum --> (Type URI * (Type Declaration AST Num) Option) *) 
      [
        (1, ("ada://ordinary_type/Standard-1:1/Integer-1:1", None)) ;
        (2, ("universal_integer", None)) ;
        (3, ("ada://ordinary_type/Standard-1:1/Boolean-1:1", None))
      ]
  }
)