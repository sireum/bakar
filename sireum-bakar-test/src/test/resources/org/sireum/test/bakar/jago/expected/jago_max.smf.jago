Definition Coq_AST_Tree_XX := 
(D_Procedure_Body_XX 1 
  (mkprocedure_body_xx 2
    (* = = = Procedure Name = = = *)
    ((*Max*) 1)
    (* = = = Formal Parameters = = = *)
    (
    (mkparameter_specification_xx 3 ((*X*) 1) Integer In) :: 
    (mkparameter_specification_xx 4 ((*Y*) 2) Integer In) :: 
    (mkparameter_specification_xx 5 ((*R*) 3) Integer Out) :: nil)
    (* = = = Object Declarations = = = *)
    ((D_Object_Declaration_XX 6 (mkobject_declaration_xx 7 ((*Result*) 4) Integer None)))
    (* = = = Procedure Body = = = *)
      (S_Sequence_XX 8
      (S_Assignment_XX 9 (E_Identifier_XX 10 ((*Result*) 4) (**(nil)**)) (E_Name_XX 11 (E_Identifier_XX 12 ((*Y*) 2) (**(nil)**)) (**(nil)**))) 
      (S_Sequence_XX 13
      (S_If_XX 14 (E_Binary_Operation_XX 15 Greater_Than (E_Name_XX 16 (E_Identifier_XX 17 ((*X*) 1) (**(nil)**)) (**(nil)**)) (E_Name_XX 18 (E_Identifier_XX 19 ((*Y*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
        (S_Assignment_XX 20 (E_Identifier_XX 21 ((*Result*) 4) (**(nil)**)) (E_Name_XX 22 (E_Identifier_XX 23 ((*X*) 1) (**(nil)**)) (**(nil)**)))
        S_Null_XX
      ) 
      (S_Assignment_XX 24 (E_Identifier_XX 25 ((*R*) 3) (**(nil)**)) (E_Name_XX 26 (E_Identifier_XX 27 ((*Result*) 4) (**(nil)**)) (**(nil)**)))))
  )
).

Definition Symbol_Table_XX := 
(mkSymbolTable_xx
  (*///////////////////////////////////*)
  (* = = = (1) variable type map = = = *)
  (*///////////////////////////////////*)
  (nil)
  (*////////////////////////////////////////////*)
  (* = = = (2) subprogram declaration map = = = *)
  (*////////////////////////////////////////////*)
  ((((*Max*) 1), (0, (mkprocedure_body_xx 2
  (* = = = Procedure Name = = = *)
  ((*Max*) 1)
  (* = = = Formal Parameters = = = *)
  (
  (mkparameter_specification_xx 3 ((*X*) 1) Integer In) :: 
  (mkparameter_specification_xx 4 ((*Y*) 2) Integer In) :: 
  (mkparameter_specification_xx 5 ((*R*) 3) Integer Out) :: nil)
  (* = = = Object Declarations = = = *)
  ((D_Object_Declaration_XX 6 (mkobject_declaration_xx 7 ((*Result*) 4) Integer None)))
  (* = = = Procedure Body = = = *)
    (S_Sequence_XX 8
    (S_Assignment_XX 9 (E_Identifier_XX 10 ((*Result*) 4) (**(nil)**)) (E_Name_XX 11 (E_Identifier_XX 12 ((*Y*) 2) (**(nil)**)) (**(nil)**))) 
    (S_Sequence_XX 13
    (S_If_XX 14 (E_Binary_Operation_XX 15 Greater_Than (E_Name_XX 16 (E_Identifier_XX 17 ((*X*) 1) (**(nil)**)) (**(nil)**)) (E_Name_XX 18 (E_Identifier_XX 19 ((*Y*) 2) (**(nil)**)) (**(nil)**)) (**(nil)**))
      (S_Assignment_XX 20 (E_Identifier_XX 21 ((*Result*) 4) (**(nil)**)) (E_Name_XX 22 (E_Identifier_XX 23 ((*X*) 1) (**(nil)**)) (**(nil)**)))
      S_Null_XX
    ) 
    (S_Assignment_XX 24 (E_Identifier_XX 25 ((*R*) 3) (**(nil)**)) (E_Name_XX 26 (E_Identifier_XX 27 ((*Result*) 4) (**(nil)**)) (**(nil)**)))))
))) :: nil)
  (*//////////////////////////////////////*)
  (* = = = (3) type declaration map = = = *)
  (*//////////////////////////////////////*)
  (nil)
  (*/////////////////////////////////////*)
  (* = = = (4) expression type map = = = *)
  (*/////////////////////////////////////*)
  ((23, Integer) :: (17, Integer) :: (26, Integer) :: (11, Integer) :: (22, Integer) :: (16, Integer) :: (25, Integer) :: (10, Integer) :: (19, Integer) :: (27, Integer) :: (18, Integer) :: (12, Integer) :: (21, Integer) :: (15, Boolean) :: nil)
  (*/////////////////////////////////////////////////*)
  (* = = = (5) ast node to source location map = = = *)
  (*/////////////////////////////////////////////////*)
  ((23, (sloc (*Line*)8 (*Col*)17 (*EndLine*)8 (*EndCol*)17)) :: (17, (sloc (*Line*)7 (*Col*)7 (*EndLine*)7 (*EndCol*)7)) :: (26, (sloc (*Line*)10 (*Col*)9 (*EndLine*)10 (*EndCol*)14)) :: (11, (sloc (*Line*)6 (*Col*)14 (*EndLine*)6 (*EndCol*)14)) :: (22, (sloc (*Line*)8 (*Col*)17 (*EndLine*)8 (*EndCol*)17)) :: (16, (sloc (*Line*)7 (*Col*)7 (*EndLine*)7 (*EndCol*)7)) :: (25, (sloc (*Line*)10 (*Col*)4 (*EndLine*)10 (*EndCol*)4)) :: (10, (sloc (*Line*)6 (*Col*)4 (*EndLine*)6 (*EndCol*)9)) :: (19, (sloc (*Line*)7 (*Col*)11 (*EndLine*)7 (*EndCol*)11)) :: (27, (sloc (*Line*)10 (*Col*)9 (*EndLine*)10 (*EndCol*)14)) :: (18, (sloc (*Line*)7 (*Col*)11 (*EndLine*)7 (*EndCol*)11)) :: (12, (sloc (*Line*)6 (*Col*)14 (*EndLine*)6 (*EndCol*)14)) :: (21, (sloc (*Line*)8 (*Col*)7 (*EndLine*)8 (*EndCol*)12)) :: (15, (sloc (*Line*)7 (*Col*)7 (*EndLine*)7 (*EndCol*)11)) :: nil)
  (* = = = (6) name id to a pair of (name string, unique name string) map = = = *)
  (*/////////////////////////////////////////////////*)
  ((mkNameTable_xx
  (*///////////////////////////////////*)
  (* = = = (1) variable names map = = = *)
  (*///////////////////////////////////*)
  ((2, ("Y", "ada://parameter/Max+1:11/Y+1:29")) :: (4, ("Result", "ada://variable/Max+1:11/Result+3:4")) :: (1, ("X", "ada://parameter/Max+1:11/X+1:16")) :: (3, ("R", "ada://parameter/Max+1:11/R+1:42")) :: nil)
  (*////////////////////////////////////////////*)
  (* = = = (2) subprogram names map = = = *)
  (*////////////////////////////////////////////*)
  ((1, ("Max", "ada://procedure_body/Max+1:11")) :: nil)
  (*//////////////////////////////////////*)
  (* = = = (3) package names map = = = *)
  (*//////////////////////////////////////*)
  (nil)
  (*/////////////////////////////////////*)
  (* = = = (4) type names map = = = *)
  (*/////////////////////////////////////*)
  (nil)
))
).

