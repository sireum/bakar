(* Compilation Unit *)
Library_Unit_XX 1
  (* Compilation Unit - Unit Declaration *)
  (Library_Subprogram_XX 2
    (* Procedure Body Declaration *)
    (Global_Procedure_XX 3
      (mkprocedure_declaration_xx 4
        (* Procedure Name *)
        ((*Test_Case_10*) 1)
        (* Formal Parameters *)
        (
        (mkparameter_specification_xx 5 ((*I1*) 1) Integer In) :: 
        (mkparameter_specification_xx 6 ((*I2*) 2) Integer In) :: 
        (mkparameter_specification_xx 7 ((*I3*) 3) Integer In) :: 
        (mkparameter_specification_xx 8 ((*O1*) 4) Integer Out) :: 
        (mkparameter_specification_xx 9 ((*O2*) 5) Integer Out) :: nil) 
        (* Procedure Contract *)
        (nil)  
        (* Object Declarations *)
        ((D_Seq_Declaration_XX 10 
      (D_Object_Declaration_XX 11 (mkobject_declaration_xx 12 ((*L1*) 6) Integer None)) 
      (D_Object_Declaration_XX 13 (mkobject_declaration_xx 14 ((*L2*) 7) Integer None))))
        (* Procedure Body *)
          (S_Sequence_XX 15
          (S_Assignment_XX 16 (E_Identifier_XX 17 ((*L2*) 7) (**(nil)**)) (E_Literal_XX 18 (Integer_Literal 5) (**(nil)**))) 
          (S_Sequence_XX 19
          (S_Assignment_XX 20 (E_Identifier_XX 21 ((*L1*) 6) (**(nil)**)) (E_Name_XX 22 (E_Identifier_XX 23 ((*I3*) 3) (**(nil)**)) (**(nil)**))) 
          (S_Sequence_XX 24
          (S_Assignment_XX 25 (E_Identifier_XX 26 ((*O2*) 5) (**(nil)**)) (E_Name_XX 27 (E_Identifier_XX 28 ((*L1*) 6) (**(nil)**)) (**(nil)**))) 
          (S_Sequence_XX 29
          (S_Assignment_XX 30 (E_Identifier_XX 31 ((*L1*) 6) (**(nil)**)) (E_Name_XX 32 (E_Identifier_XX 33 ((*I2*) 2) (**(nil)**)) (**(nil)**))) 
          (S_Sequence_XX 34
          (S_Assignment_XX 35 (E_Identifier_XX 36 ((*L1*) 6) (**(nil)**)) (E_Binary_Operation_XX 37 Plus (E_Name_XX 38 (E_Identifier_XX 39 ((*I1*) 1) (**(nil)**)) (**(nil)**)) (E_Name_XX 40 (E_Identifier_XX 41 ((*I2*) 2) (**(nil)**)) (**(nil)**)) (**(Do_Overflow_Check :: nil)**))) 
          (S_Sequence_XX 42
          (S_If_XX 43 (E_Binary_Operation_XX 44 Greater_Than (E_Name_XX 45 (E_Identifier_XX 46 ((*L1*) 6) (**(nil)**)) (**(nil)**)) (E_Literal_XX 47 (Integer_Literal 5) (**(nil)**)) (**(nil)**))
            (S_If_XX 48 (E_Binary_Operation_XX 49 Less_Than (E_Name_XX 50 (E_Identifier_XX 51 ((*I1*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 52 (Integer_Literal 0) (**(nil)**)) (**(nil)**))
              (S_Assignment_XX 53 (E_Identifier_XX 54 ((*L2*) 7) (**(nil)**)) (E_Literal_XX 55 (Integer_Literal 8) (**(nil)**)))
              S_Null_XX
            )
            S_Null_XX
          ) 
          (S_Assignment_XX 56 (E_Identifier_XX 57 ((*O1*) 4) (**(nil)**)) (E_Name_XX 58 (E_Identifier_XX 59 ((*L2*) 7) (**(nil)**)) (**(nil)**)))))))))
      )
    )
  )