Definition Coq_AST_Tree_XX := 
(D_Seq_Declaration_XX 1
(D_Seq_Declaration_XX 35
(D_Type_Declaration_XX 36 (Subtype_Declaration_XX 37 ((*FILE_NUM*) 1) Integer (Range_XX 1 5))) 
(D_Seq_Declaration_XX 38
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 40
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 42
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 44
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 46
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 48
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 50
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 52
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 54
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 56
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 58
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 60
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 62
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 64
D_Null_Declaration_XX (* Undefined Declarations ! *) 
D_Null_Declaration_XX (* Undefined Declarations ! *)))))))))))))))) 
(D_Procedure_Body_XX 67 
  (mkprocedure_body_xx 69
    (* = = = Procedure Name = = = *)
    ((*C55C02B*) 16)
    (* = = = Formal Parameters = = = *)
    (nil)
    (* = = = Object Declarations = = = *)
    ((D_Seq_Declaration_XX 70
  D_Null_Declaration_XX (* Undefined Declarations ! *) 
  (D_Seq_Declaration_XX 72
  (D_Object_Declaration_XX 73 (mkobject_declaration_xx 74 ((*I*) 1) Integer (Some ((E_Literal_XX 75 (Integer_Literal 0) (**(nil)**)))))) 
  (D_Seq_Declaration_XX 76
  (D_Type_Declaration_XX 77 (Integer_Type_Declaration_XX 78 ((*Index*) 3) (Range_XX 0 1))) 
  (D_Seq_Declaration_XX 79
  (D_Type_Declaration_XX 80 (Array_Type_Declaration_XX 81 ((*ArrayT*) 4) ((*index subtype mark*) Boolean) ((*component type*) (Integer_Type ((*Index*) 3))))) 
  (D_Seq_Declaration_XX 82
  (D_Object_Declaration_XX 83 (mkobject_declaration_xx 84 ((*FT*) 2) (Array_Type ((*ArrayT*) 4)) None)) 
  (D_Object_Declaration_XX 85 (mkobject_declaration_xx 86 ((*X*) 3) (Integer_Type ((*Index*) 3)) None))))))))
    (* = = = Procedure Body = = = *)
      (S_Sequence_XX 87
      (S_Assignment_XX 88 (E_Indexed_Component_XX 89 90 ((*FT*) 2) (E_Literal_XX 92 (Integer_Literal 0) (**(nil)**)) (**(nil)**)) (E_Literal_XX 93 (Boolean_Literal false) (**(nil)**))) 
      (S_Sequence_XX 94
      (S_Assignment_XX 95 (E_Indexed_Component_XX 96 97 ((*FT*) 2) (E_Literal_XX 99 (Integer_Literal 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 100 (Boolean_Literal true) (**(nil)**))) 
      (S_Sequence_XX 101
      S_Null_XX (* call a procedure with no procedure body ! *) 
      (S_Sequence_XX 104
      (S_While_Loop_XX 105 (E_Binary_Operation_XX 106 Not_Equal (E_Name_XX 107 (E_Identifier_XX 108 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 109 (Integer_Literal 10) (**(nil)**)) (**(nil)**))
        (S_Assignment_XX 110 (E_Identifier_XX 111 ((*I*) 1) (**(nil)**)) (E_Binary_Operation_XX 112 Plus (E_Name_XX 113 (E_Identifier_XX 114 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 115 (Integer_Literal 1) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)))
      ) 
      (S_Sequence_XX 116
      (S_If_XX 117 (E_Binary_Operation_XX 118 Not_Equal (E_Name_XX 119 (E_Identifier_XX 120 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 121 (Integer_Literal 10) (**(nil)**)) (**(nil)**))
        S_Null_XX (* call a procedure with no procedure body ! *)
        S_Null_XX
      ) 
      (S_Sequence_XX 124
      (S_Assignment_XX 125 (E_Identifier_XX 126 ((*I*) 1) (**(nil)**)) (E_Literal_XX 127 (Integer_Literal 10) (**(nil)**))) 
      (S_Sequence_XX 128
      (S_If_XX 129 (E_Binary_Operation_XX 130 Not_Equal (E_Name_XX 131 (E_Identifier_XX 132 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 133 (Integer_Literal 14) (**(nil)**)) (**(nil)**))
        (S_Assignment_XX 134 (E_Identifier_XX 135 ((*X*) 3) (**(nil)**)) (E_Literal_XX 136 (Integer_Literal 1) (**(nil)**)))
        (S_Assignment_XX 137 (E_Identifier_XX 138 ((*X*) 3) (**(nil)**)) (E_Literal_XX 139 (Integer_Literal 0) (**(nil)**)))
      ) 
      (S_Sequence_XX 140
      (S_While_Loop_XX 141 (E_Name_XX 142 (E_Indexed_Component_XX 143 144 ((*FT*) 2) (E_Name_XX 146 (E_Identifier_XX 147 ((*X*) 3) (**(nil)**)) (**(nil)**)) (**(nil)**)) (**(nil)**))
        (S_Assignment_XX 148 (E_Identifier_XX 149 ((*I*) 1) (**(nil)**)) (E_Binary_Operation_XX 150 Plus (E_Name_XX 151 (E_Identifier_XX 152 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 153 (Integer_Literal 1) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)))
      ) 
      (S_Sequence_XX 154
      (S_If_XX 155 (E_Binary_Operation_XX 156 Not_Equal (E_Name_XX 157 (E_Identifier_XX 158 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 159 (Integer_Literal 14) (**(nil)**)) (**(nil)**))
        S_Null_XX (* call a procedure with no procedure body ! *)
        S_Null_XX
      ) 
      S_Null_XX (* call a procedure with no procedure body ! *))))))))))
  )
)).

Definition Symbol_Table_XX := 
(mkSymbolTable_xx
  (*///////////////////////////////////*)
  (* = = = (1) variable type map = = = *)
  (*///////////////////////////////////*)
  (nil)
  (*////////////////////////////////////////////*)
  (* = = = (2) subprogram declaration map = = = *)
  (*////////////////////////////////////////////*)
  ((((*C55C02B*) 16), (0, (mkprocedure_body_xx 69
  (* = = = Procedure Name = = = *)
  ((*C55C02B*) 16)
  (* = = = Formal Parameters = = = *)
  (nil)
  (* = = = Object Declarations = = = *)
  ((D_Seq_Declaration_XX 70
D_Null_Declaration_XX (* Undefined Declarations ! *) 
(D_Seq_Declaration_XX 72
(D_Object_Declaration_XX 73 (mkobject_declaration_xx 74 ((*I*) 1) Integer (Some ((E_Literal_XX 75 (Integer_Literal 0) (**(nil)**)))))) 
(D_Seq_Declaration_XX 76
(D_Type_Declaration_XX 77 (Integer_Type_Declaration_XX 78 ((*Index*) 3) (Range_XX 0 1))) 
(D_Seq_Declaration_XX 79
(D_Type_Declaration_XX 80 (Array_Type_Declaration_XX 81 ((*ArrayT*) 4) ((*index subtype mark*) Boolean) ((*component type*) (Integer_Type ((*Index*) 3))))) 
(D_Seq_Declaration_XX 82
(D_Object_Declaration_XX 83 (mkobject_declaration_xx 84 ((*FT*) 2) (Array_Type ((*ArrayT*) 4)) None)) 
(D_Object_Declaration_XX 85 (mkobject_declaration_xx 86 ((*X*) 3) (Integer_Type ((*Index*) 3)) None))))))))
  (* = = = Procedure Body = = = *)
    (S_Sequence_XX 87
    (S_Assignment_XX 88 (E_Indexed_Component_XX 89 90 ((*FT*) 2) (E_Literal_XX 92 (Integer_Literal 0) (**(nil)**)) (**(nil)**)) (E_Literal_XX 93 (Boolean_Literal false) (**(nil)**))) 
    (S_Sequence_XX 94
    (S_Assignment_XX 95 (E_Indexed_Component_XX 96 97 ((*FT*) 2) (E_Literal_XX 99 (Integer_Literal 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 100 (Boolean_Literal true) (**(nil)**))) 
    (S_Sequence_XX 101
    S_Null_XX (* call a procedure with no procedure body ! *) 
    (S_Sequence_XX 104
    (S_While_Loop_XX 105 (E_Binary_Operation_XX 106 Not_Equal (E_Name_XX 107 (E_Identifier_XX 108 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 109 (Integer_Literal 10) (**(nil)**)) (**(nil)**))
      (S_Assignment_XX 110 (E_Identifier_XX 111 ((*I*) 1) (**(nil)**)) (E_Binary_Operation_XX 112 Plus (E_Name_XX 113 (E_Identifier_XX 114 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 115 (Integer_Literal 1) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)))
    ) 
    (S_Sequence_XX 116
    (S_If_XX 117 (E_Binary_Operation_XX 118 Not_Equal (E_Name_XX 119 (E_Identifier_XX 120 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 121 (Integer_Literal 10) (**(nil)**)) (**(nil)**))
      S_Null_XX (* call a procedure with no procedure body ! *)
      S_Null_XX
    ) 
    (S_Sequence_XX 124
    (S_Assignment_XX 125 (E_Identifier_XX 126 ((*I*) 1) (**(nil)**)) (E_Literal_XX 127 (Integer_Literal 10) (**(nil)**))) 
    (S_Sequence_XX 128
    (S_If_XX 129 (E_Binary_Operation_XX 130 Not_Equal (E_Name_XX 131 (E_Identifier_XX 132 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 133 (Integer_Literal 14) (**(nil)**)) (**(nil)**))
      (S_Assignment_XX 134 (E_Identifier_XX 135 ((*X*) 3) (**(nil)**)) (E_Literal_XX 136 (Integer_Literal 1) (**(nil)**)))
      (S_Assignment_XX 137 (E_Identifier_XX 138 ((*X*) 3) (**(nil)**)) (E_Literal_XX 139 (Integer_Literal 0) (**(nil)**)))
    ) 
    (S_Sequence_XX 140
    (S_While_Loop_XX 141 (E_Name_XX 142 (E_Indexed_Component_XX 143 144 ((*FT*) 2) (E_Name_XX 146 (E_Identifier_XX 147 ((*X*) 3) (**(nil)**)) (**(nil)**)) (**(nil)**)) (**(nil)**))
      (S_Assignment_XX 148 (E_Identifier_XX 149 ((*I*) 1) (**(nil)**)) (E_Binary_Operation_XX 150 Plus (E_Name_XX 151 (E_Identifier_XX 152 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 153 (Integer_Literal 1) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)))
    ) 
    (S_Sequence_XX 154
    (S_If_XX 155 (E_Binary_Operation_XX 156 Not_Equal (E_Name_XX 157 (E_Identifier_XX 158 ((*I*) 1) (**(nil)**)) (**(nil)**)) (E_Literal_XX 159 (Integer_Literal 14) (**(nil)**)) (**(nil)**))
      S_Null_XX (* call a procedure with no procedure body ! *)
      S_Null_XX
    ) 
    S_Null_XX (* call a procedure with no procedure body ! *))))))))))
))) :: nil)
  (*//////////////////////////////////////*)
  (* = = = (3) type declaration map = = = *)
  (*//////////////////////////////////////*)
  ((((*FILE_NUM*) 1), (Subtype_Declaration_XX 37 ((*FILE_NUM*) 1) Integer (Range_XX 1 5))) :: (((*Index*) 3), (Integer_Type_Declaration_XX 78 ((*Index*) 3) (Range_XX 0 1))) :: (((*ArrayT*) 4), (Array_Type_Declaration_XX 81 ((*ArrayT*) 4) ((*index subtype mark*) Boolean) ((*component type*) (Integer_Type ((*Index*) 3))))) :: nil)
  (*/////////////////////////////////////*)
  (* = = = (4) expression type map = = = *)
  (*/////////////////////////////////////*)
  ((146, (Integer_Type ((*Index*) 3))) :: (92, Integer) :: (119, Integer) :: (131, Integer) :: (158, Integer) :: (149, Integer) :: (113, Integer) :: (89, Boolean) :: (107, Integer) :: (98, (Array_Type ((*ArrayT*) 4))) :: (151, Integer) :: (142, Boolean) :: (133, Integer) :: (106, Boolean) :: (115, Integer) :: (118, Boolean) :: (127, Integer) :: (136, Integer) :: (109, Integer) :: (100, Boolean) :: (91, (Array_Type ((*ArrayT*) 4))) :: (145, (Array_Type ((*ArrayT*) 4))) :: (139, Integer) :: (130, Boolean) :: (157, Integer) :: (121, Integer) :: (112, Integer) :: (156, Boolean) :: (147, (Integer_Type ((*Index*) 3))) :: (138, (Integer_Type ((*Index*) 3))) :: (120, Integer) :: (159, Integer) :: (150, Integer) :: (132, Integer) :: (96, Boolean) :: (114, Integer) :: (99, Integer) :: (153, Integer) :: (126, Integer) :: (135, (Integer_Type ((*Index*) 3))) :: (108, Integer) :: (93, Boolean) :: (75, Integer) :: (111, Integer) :: (152, Integer) :: (143, Boolean) :: nil)
  (*/////////////////////////////////////////////////*)
  (* = = = (5) ast node to source location map = = = *)
  (*/////////////////////////////////////////////////*)
  ((146, (sloc (*Line*)66 (*Col*)16 (*EndLine*)66 (*EndCol*)16)) :: (92, (sloc (*Line*)45 (*Col*)9 (*EndLine*)45 (*EndCol*)9)) :: (119, (sloc (*Line*)53 (*Col*)9 (*EndLine*)53 (*EndCol*)9)) :: (131, (sloc (*Line*)59 (*Col*)10 (*EndLine*)59 (*EndCol*)10)) :: (158, (sloc (*Line*)69 (*Col*)9 (*EndLine*)69 (*EndCol*)9)) :: (149, (sloc (*Line*)67 (*Col*)11 (*EndLine*)67 (*EndCol*)11)) :: (113, (sloc (*Line*)51 (*Col*)16 (*EndLine*)51 (*EndCol*)16)) :: (89, (sloc (*Line*)45 (*Col*)6 (*EndLine*)45 (*EndCol*)10)) :: (107, (sloc (*Line*)50 (*Col*)12 (*EndLine*)50 (*EndCol*)12)) :: (98, (sloc (*Line*)46 (*Col*)6 (*EndLine*)46 (*EndCol*)7)) :: (151, (sloc (*Line*)67 (*Col*)16 (*EndLine*)67 (*EndCol*)16)) :: (142, (sloc (*Line*)66 (*Col*)12 (*EndLine*)66 (*EndCol*)17)) :: (133, (sloc (*Line*)59 (*Col*)15 (*EndLine*)59 (*EndCol*)16)) :: (106, (sloc (*Line*)50 (*Col*)12 (*EndLine*)50 (*EndCol*)18)) :: (115, (sloc (*Line*)51 (*Col*)20 (*EndLine*)51 (*EndCol*)20)) :: (118, (sloc (*Line*)53 (*Col*)9 (*EndLine*)53 (*EndCol*)15)) :: (127, (sloc (*Line*)57 (*Col*)11 (*EndLine*)57 (*EndCol*)12)) :: (136, (sloc (*Line*)60 (*Col*)13 (*EndLine*)60 (*EndCol*)13)) :: (109, (sloc (*Line*)50 (*Col*)17 (*EndLine*)50 (*EndCol*)18)) :: (100, (sloc (*Line*)46 (*Col*)15 (*EndLine*)46 (*EndCol*)18)) :: (91, (sloc (*Line*)45 (*Col*)6 (*EndLine*)45 (*EndCol*)7)) :: (145, (sloc (*Line*)66 (*Col*)12 (*EndLine*)66 (*EndCol*)13)) :: (139, (sloc (*Line*)62 (*Col*)13 (*EndLine*)62 (*EndCol*)13)) :: (130, (sloc (*Line*)59 (*Col*)10 (*EndLine*)59 (*EndCol*)16)) :: (157, (sloc (*Line*)69 (*Col*)9 (*EndLine*)69 (*EndCol*)9)) :: (121, (sloc (*Line*)53 (*Col*)14 (*EndLine*)53 (*EndCol*)15)) :: (112, (sloc (*Line*)51 (*Col*)16 (*EndLine*)51 (*EndCol*)20)) :: (156, (sloc (*Line*)69 (*Col*)9 (*EndLine*)69 (*EndCol*)15)) :: (147, (sloc (*Line*)66 (*Col*)16 (*EndLine*)66 (*EndCol*)16)) :: (138, (sloc (*Line*)62 (*Col*)8 (*EndLine*)62 (*EndCol*)8)) :: (120, (sloc (*Line*)53 (*Col*)9 (*EndLine*)53 (*EndCol*)9)) :: (159, (sloc (*Line*)69 (*Col*)14 (*EndLine*)69 (*EndCol*)15)) :: (150, (sloc (*Line*)67 (*Col*)16 (*EndLine*)67 (*EndCol*)20)) :: (132, (sloc (*Line*)59 (*Col*)10 (*EndLine*)59 (*EndCol*)10)) :: (96, (sloc (*Line*)46 (*Col*)6 (*EndLine*)46 (*EndCol*)10)) :: (114, (sloc (*Line*)51 (*Col*)16 (*EndLine*)51 (*EndCol*)16)) :: (99, (sloc (*Line*)46 (*Col*)9 (*EndLine*)46 (*EndCol*)9)) :: (153, (sloc (*Line*)67 (*Col*)20 (*EndLine*)67 (*EndCol*)20)) :: (126, (sloc (*Line*)57 (*Col*)6 (*EndLine*)57 (*EndCol*)6)) :: (135, (sloc (*Line*)60 (*Col*)8 (*EndLine*)60 (*EndCol*)8)) :: (108, (sloc (*Line*)50 (*Col*)12 (*EndLine*)50 (*EndCol*)12)) :: (93, (sloc (*Line*)45 (*Col*)15 (*EndLine*)45 (*EndCol*)19)) :: (75, (sloc (*Line*)35 (*Col*)21 (*EndLine*)35 (*EndCol*)21)) :: (111, (sloc (*Line*)51 (*Col*)11 (*EndLine*)51 (*EndCol*)11)) :: (152, (sloc (*Line*)67 (*Col*)16 (*EndLine*)67 (*EndCol*)16)) :: (143, (sloc (*Line*)66 (*Col*)12 (*EndLine*)66 (*EndCol*)17)) :: nil)
).

