(* Compilation Unit *)
CompilationUnit 1
  (* Compilation Unit - Unit Declaration *) (
    UnitDecl 2 (
      (* Function Body Declaration *)
      Sfunc 3 (
        mkfunction_body 4
          (* Function Body - Name *)
          (*Gcd*) 1
          (* Function Body - Return Type *) 
          (Tint) 
          (* Function Body - Specification *)
          (nil)
          (* Function Body - Parameters *)
          (
          mkparam_specification 5 (*M*) 1 (1) (In) None :: 
          mkparam_specification 6 (*N*) 2 (1) (In) None :: nil)
          (* Function Body - Local Defined Variables *)
          (
          mklocal_declaration 7 (*C*) 3 1 None :: 
          mklocal_declaration 8 (*T*) 5 1 None :: 
          mklocal_declaration 9 (*R*) 6 1 None :: nil)
          (* Function Body - Body *) (
            Sseq 10 (
              Sassign 11 ((*C*) 3) (Evar 12 (*M*) 1) ) ( 
              Sseq 13 (
                Sassign 14 ((*D*) 4) (Evar 15 (*N*) 2) ) ( 
                Sseq 16 (
                  Swhile 17 (Ebinop 18 Cne (Evar 19 (*D*) 4) (Econst 20 (Ointconst 0))) (
                      Sseq 21 (
                        Sassign 22 ((*T*) 5) (Ebinop 23 Odiv (Evar 24 (*C*) 3) (Evar 25 (*D*) 4)) ) ( 
                        Sseq 26 (
                          Sassign 27 ((*R*) 6) (Ebinop 28 Osub (Evar 29 (*C*) 3) (Ebinop 30 Omul (Evar 31 (*T*) 5) (Evar 32 (*D*) 4))) ) ( 
                          Sseq 33 (
                            Sassign 34 ((*C*) 3) (Evar 35 (*D*) 4) ) ( 
                            Sassign 36 ((*D*) 4) (Evar 37 (*R*) 6) ) ) )
                    ) ) ( 
                  Sreturn 38 (Some (Evar 39 (*C*) 3)) ) ) )
          )
      )
    )
  )
  (* Compilation Unit - Type Table *) (
    mktype_table (
      (* Expression Type Table: Expression AstNum --> TypeNum *)
      (12, 1) ::
      (15, 1) ::
      (18, 3) ::
      (19, 1) ::
      (20, 2) ::
      (23, 1) ::
      (24, 1) ::
      (25, 1) ::
      (28, 1) ::
      (29, 1) ::
      (30, 1) ::
      (31, 1) ::
      (32, 1) ::
      (35, 1) ::
      (37, 1) ::
      (39, 1) :: nil
    ) (
      (* Type Name Table: TypeNum --> (Type URI * Option(Type Declaration AST Num)) *)
      (1, ("ada://ordinary_type/Standard-1:1/Integer-1:1"%string, None)) ::
      (2, ("universal_integer"%string, None)) ::
      (3, ("ada://ordinary_type/Standard-1:1/Boolean-1:1"%string, None)) :: nil
    )
  )