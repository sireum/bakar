Definition Coq_AST_Tree_XX := 
(D_Procedure_Body_XX 1 
  (mkprocedure_body_xx 3
    (* = = = Procedure Name = = = *)
    ((*Gcd*) 1)
    (* = = = Formal Parameters = = = *)
    (
    (mkparameter_specification_xx 4 ((*M*) 1) Integer In) :: 
    (mkparameter_specification_xx 5 ((*N*) 2) Integer In) :: 
    (mkparameter_specification_xx 6 ((*Y*) 3) Integer Out) :: nil)
    (* = = = Object Declarations = = = *)
    ((D_Seq_Declaration_XX 7
  (D_Object_Declaration_XX 8 (mkobject_declaration_xx 9 ((*C*) 4) Integer None)) 
  (D_Seq_Declaration_XX 10
  (D_Object_Declaration_XX 11 (mkobject_declaration_xx 12 ((*D*) 5) Integer None)) 
  (D_Seq_Declaration_XX 13
  (D_Object_Declaration_XX 14 (mkobject_declaration_xx 15 ((*T*) 6) Integer None)) 
  (D_Object_Declaration_XX 16 (mkobject_declaration_xx 17 ((*R*) 7) Integer None))))))
    (* = = = Procedure Body = = = *)
      (S_Sequence_XX 18
      (S_Assignment_XX 19 (E_Identifier_XX 20 ((*C*) 4) (**(nil)**)) (E_Name_XX 21 (E_Identifier_XX 22 ((*M*) 1) (**(nil)**)) (**(nil)**))) 
      (S_Sequence_XX 23
      (S_Assignment_XX 24 (E_Identifier_XX 25 ((*D*) 5) (**(nil)**)) (E_Name_XX 26 (E_Identifier_XX 27 ((*N*) 2) (**(nil)**)) (**(nil)**))) 
      (S_Sequence_XX 28
      (S_While_Loop_XX 29 (E_Binary_Operation_XX 30 Not_Equal (E_Name_XX 31 (E_Identifier_XX 32 ((*D*) 5) (**(nil)**)) (**(nil)**)) (E_Literal_XX 33 (Integer_Literal 0) (**(nil)**)) (**(nil)**))
        (S_Sequence_XX 34
        (S_Assignment_XX 35 (E_Identifier_XX 36 ((*T*) 6) (**(nil)**)) (E_Binary_Operation_XX 37 Divide (E_Name_XX 38 (E_Identifier_XX 39 ((*C*) 4) (**(nil)**)) (**(nil)**)) (E_Name_XX 40 (E_Identifier_XX 41 ((*D*) 5) (**(nil)**)) (**(nil)**)) (**(Do_Division_Check :: Do_Overflow_Check :: nil)**))) 
        (S_Sequence_XX 42
        (S_Assignment_XX 43 (E_Identifier_XX 44 ((*R*) 7) (**(nil)**)) (E_Binary_Operation_XX 45 Minus (E_Name_XX 46 (E_Identifier_XX 47 ((*C*) 4) (**(nil)**)) (**(nil)**)) (E_Binary_Operation_XX 48 Multiply (E_Name_XX 49 (E_Identifier_XX 50 ((*T*) 6) (**(nil)**)) (**(nil)**)) (E_Name_XX 51 (E_Identifier_XX 52 ((*D*) 5) (**(nil)**)) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)) (**(Do_Overflow_Check :: nil)**))) 
        (S_Sequence_XX 53
        (S_Assignment_XX 54 (E_Identifier_XX 55 ((*C*) 4) (**(nil)**)) (E_Name_XX 56 (E_Identifier_XX 57 ((*D*) 5) (**(nil)**)) (**(nil)**))) 
        (S_Assignment_XX 58 (E_Identifier_XX 59 ((*D*) 5) (**(nil)**)) (E_Name_XX 60 (E_Identifier_XX 61 ((*R*) 7) (**(nil)**)) (**(nil)**))))))
      ) 
      (S_Assignment_XX 62 (E_Identifier_XX 63 ((*Y*) 3) (**(nil)**)) (E_Name_XX 64 (E_Identifier_XX 65 ((*C*) 4) (**(nil)**)) (**(nil)**))))))
  )
).

Definition Symbol_Table_XX := 
(mkSymbolTable_xx
  (*///////////////////////////////////*)
  (* = = = (1) variable type map = = = *)
  (*///////////////////////////////////*)
  (nil)
  (*////////////////////////////////////////////*)
  (* = = = (2) subprogram declaration map = = = *)
  (*////////////////////////////////////////////*)
  ((((*Gcd*) 1), (0, (mkprocedure_body_xx 3
  (* = = = Procedure Name = = = *)
  ((*Gcd*) 1)
  (* = = = Formal Parameters = = = *)
  (
  (mkparameter_specification_xx 4 ((*M*) 1) Integer In) :: 
  (mkparameter_specification_xx 5 ((*N*) 2) Integer In) :: 
  (mkparameter_specification_xx 6 ((*Y*) 3) Integer Out) :: nil)
  (* = = = Object Declarations = = = *)
  ((D_Seq_Declaration_XX 7
(D_Object_Declaration_XX 8 (mkobject_declaration_xx 9 ((*C*) 4) Integer None)) 
(D_Seq_Declaration_XX 10
(D_Object_Declaration_XX 11 (mkobject_declaration_xx 12 ((*D*) 5) Integer None)) 
(D_Seq_Declaration_XX 13
(D_Object_Declaration_XX 14 (mkobject_declaration_xx 15 ((*T*) 6) Integer None)) 
(D_Object_Declaration_XX 16 (mkobject_declaration_xx 17 ((*R*) 7) Integer None))))))
  (* = = = Procedure Body = = = *)
    (S_Sequence_XX 18
    (S_Assignment_XX 19 (E_Identifier_XX 20 ((*C*) 4) (**(nil)**)) (E_Name_XX 21 (E_Identifier_XX 22 ((*M*) 1) (**(nil)**)) (**(nil)**))) 
    (S_Sequence_XX 23
    (S_Assignment_XX 24 (E_Identifier_XX 25 ((*D*) 5) (**(nil)**)) (E_Name_XX 26 (E_Identifier_XX 27 ((*N*) 2) (**(nil)**)) (**(nil)**))) 
    (S_Sequence_XX 28
    (S_While_Loop_XX 29 (E_Binary_Operation_XX 30 Not_Equal (E_Name_XX 31 (E_Identifier_XX 32 ((*D*) 5) (**(nil)**)) (**(nil)**)) (E_Literal_XX 33 (Integer_Literal 0) (**(nil)**)) (**(nil)**))
      (S_Sequence_XX 34
      (S_Assignment_XX 35 (E_Identifier_XX 36 ((*T*) 6) (**(nil)**)) (E_Binary_Operation_XX 37 Divide (E_Name_XX 38 (E_Identifier_XX 39 ((*C*) 4) (**(nil)**)) (**(nil)**)) (E_Name_XX 40 (E_Identifier_XX 41 ((*D*) 5) (**(nil)**)) (**(nil)**)) (**(Do_Division_Check :: Do_Overflow_Check :: nil)**))) 
      (S_Sequence_XX 42
      (S_Assignment_XX 43 (E_Identifier_XX 44 ((*R*) 7) (**(nil)**)) (E_Binary_Operation_XX 45 Minus (E_Name_XX 46 (E_Identifier_XX 47 ((*C*) 4) (**(nil)**)) (**(nil)**)) (E_Binary_Operation_XX 48 Multiply (E_Name_XX 49 (E_Identifier_XX 50 ((*T*) 6) (**(nil)**)) (**(nil)**)) (E_Name_XX 51 (E_Identifier_XX 52 ((*D*) 5) (**(nil)**)) (**(nil)**)) (**(Do_Overflow_Check :: nil)**)) (**(Do_Overflow_Check :: nil)**))) 
      (S_Sequence_XX 53
      (S_Assignment_XX 54 (E_Identifier_XX 55 ((*C*) 4) (**(nil)**)) (E_Name_XX 56 (E_Identifier_XX 57 ((*D*) 5) (**(nil)**)) (**(nil)**))) 
      (S_Assignment_XX 58 (E_Identifier_XX 59 ((*D*) 5) (**(nil)**)) (E_Name_XX 60 (E_Identifier_XX 61 ((*R*) 7) (**(nil)**)) (**(nil)**))))))
    ) 
    (S_Assignment_XX 62 (E_Identifier_XX 63 ((*Y*) 3) (**(nil)**)) (E_Name_XX 64 (E_Identifier_XX 65 ((*C*) 4) (**(nil)**)) (**(nil)**))))))
))) :: nil)
  (*//////////////////////////////////////*)
  (* = = = (3) type declaration map = = = *)
  (*//////////////////////////////////////*)
  (nil)
  (*/////////////////////////////////////*)
  (* = = = (4) expression type map = = = *)
  (*/////////////////////////////////////*)
  ((59, Integer) :: (32, Integer) :: (41, Integer) :: (50, Integer) :: (44, Integer) :: (26, Integer) :: (56, Integer) :: (38, Integer) :: (47, Integer) :: (20, Integer) :: (65, Integer) :: (46, Integer) :: (64, Integer) :: (55, Integer) :: (40, Integer) :: (49, Integer) :: (31, Integer) :: (22, Integer) :: (52, Integer) :: (25, Integer) :: (61, Integer) :: (37, Integer) :: (60, Integer) :: (63, Integer) :: (45, Integer) :: (36, Integer) :: (27, Integer) :: (57, Integer) :: (21, Integer) :: (48, Integer) :: (30, Boolean) :: (39, Integer) :: (33, Integer) :: (51, Integer) :: nil)
  (*/////////////////////////////////////////////////*)
  (* = = = (5) ast node to source location map = = = *)
  (*/////////////////////////////////////////////////*)
  ((59, (sloc (*Line*)15 (*Col*)7 (*EndLine*)15 (*EndCol*)7)) :: (32, (sloc (*Line*)10 (*Col*)10 (*EndLine*)10 (*EndCol*)10)) :: (41, (sloc (*Line*)12 (*Col*)16 (*EndLine*)12 (*EndCol*)16)) :: (50, (sloc (*Line*)13 (*Col*)16 (*EndLine*)13 (*EndCol*)16)) :: (44, (sloc (*Line*)13 (*Col*)7 (*EndLine*)13 (*EndCol*)7)) :: (26, (sloc (*Line*)9 (*Col*)9 (*EndLine*)9 (*EndCol*)9)) :: (56, (sloc (*Line*)14 (*Col*)12 (*EndLine*)14 (*EndCol*)12)) :: (38, (sloc (*Line*)12 (*Col*)12 (*EndLine*)12 (*EndCol*)12)) :: (47, (sloc (*Line*)13 (*Col*)12 (*EndLine*)13 (*EndCol*)12)) :: (20, (sloc (*Line*)8 (*Col*)4 (*EndLine*)8 (*EndCol*)4)) :: (65, (sloc (*Line*)17 (*Col*)9 (*EndLine*)17 (*EndCol*)9)) :: (46, (sloc (*Line*)13 (*Col*)12 (*EndLine*)13 (*EndCol*)12)) :: (64, (sloc (*Line*)17 (*Col*)9 (*EndLine*)17 (*EndCol*)9)) :: (55, (sloc (*Line*)14 (*Col*)7 (*EndLine*)14 (*EndCol*)7)) :: (40, (sloc (*Line*)12 (*Col*)16 (*EndLine*)12 (*EndCol*)16)) :: (49, (sloc (*Line*)13 (*Col*)16 (*EndLine*)13 (*EndCol*)16)) :: (31, (sloc (*Line*)10 (*Col*)10 (*EndLine*)10 (*EndCol*)10)) :: (22, (sloc (*Line*)8 (*Col*)9 (*EndLine*)8 (*EndCol*)9)) :: (52, (sloc (*Line*)13 (*Col*)20 (*EndLine*)13 (*EndCol*)20)) :: (25, (sloc (*Line*)9 (*Col*)4 (*EndLine*)9 (*EndCol*)4)) :: (61, (sloc (*Line*)15 (*Col*)12 (*EndLine*)15 (*EndCol*)12)) :: (37, (sloc (*Line*)12 (*Col*)12 (*EndLine*)12 (*EndCol*)16)) :: (60, (sloc (*Line*)15 (*Col*)12 (*EndLine*)15 (*EndCol*)12)) :: (63, (sloc (*Line*)17 (*Col*)4 (*EndLine*)17 (*EndCol*)4)) :: (45, (sloc (*Line*)13 (*Col*)12 (*EndLine*)13 (*EndCol*)20)) :: (36, (sloc (*Line*)12 (*Col*)7 (*EndLine*)12 (*EndCol*)7)) :: (27, (sloc (*Line*)9 (*Col*)9 (*EndLine*)9 (*EndCol*)9)) :: (57, (sloc (*Line*)14 (*Col*)12 (*EndLine*)14 (*EndCol*)12)) :: (21, (sloc (*Line*)8 (*Col*)9 (*EndLine*)8 (*EndCol*)9)) :: (48, (sloc (*Line*)13 (*Col*)16 (*EndLine*)13 (*EndCol*)20)) :: (30, (sloc (*Line*)10 (*Col*)10 (*EndLine*)10 (*EndCol*)15)) :: (39, (sloc (*Line*)12 (*Col*)12 (*EndLine*)12 (*EndCol*)12)) :: (33, (sloc (*Line*)10 (*Col*)15 (*EndLine*)10 (*EndCol*)15)) :: (51, (sloc (*Line*)13 (*Col*)20 (*EndLine*)13 (*EndCol*)20)) :: nil)
).

