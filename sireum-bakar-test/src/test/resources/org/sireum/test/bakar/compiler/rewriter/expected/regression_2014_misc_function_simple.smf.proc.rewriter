package Function_Simple;


global Integer @@B;

procedure $$binit {

  #l0.
    @@Y := 1ii;

  #l1.
    @@B := 0ii;

  #l2.
    @@C := 0ii;

  #l10.
    return;
}

procedure Integer F1 (
        Integer X,
        Integer Z) {

  #l3.
    return X + Z + @@Y;
}

procedure P1 (
        Integer M,
        Integer N) {
  local
    Integer _tcomp0;


  #l4.
    call _tcomp0 := F1 (M, N);

  #l5.
    @@B := _tcomp0;

  #l6.
    return;
}

procedure P2 (
        Integer M,
        Integer N) {
  local
    Integer _tcomp1;


  #l7.
    call _tcomp1 := F1 (M, N);

  #l8.
    @@B := _tcomp1 + @@C;

  #l9.
    return;
}package Function_Simple;


global Integer @@Y;

global Integer @@C;

procedure Integer F1 (
        Integer X,
        Integer Z) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;