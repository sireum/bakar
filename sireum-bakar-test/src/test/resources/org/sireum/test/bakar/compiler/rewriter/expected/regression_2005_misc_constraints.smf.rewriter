package Constraints;


procedure foo (
        Integer a,
        Day dayVar) {

  #l2.
    if !(!(dayVar == Tue)) then goto l1;

  #l3.
    a := a + 2ii;

  #l4.
    goto l0;

  #l1.
    // empty loc

  #l6.
    if !(attribute__uif__succ (`Day, dayVar) == Wed) then goto l5;

  #l7.
    a := a - 1ii;

  #l8.
    goto l0;

  #l5.
    // empty loc

  #l9.
    a := a * 1ii;

  #l0.
    // empty loc

  #l10.
    return;
}package Constraints;


typealias Integer Sub_Int;

typealias _SIGNED_INTEGER_TYPE_ Int_Range;

enum Day {
  Mon, Tue, Wed, Thur, Fri, Sat, Sun
}

typealias Day Weekday;

const $CONST {
  Int_Low_Const = (Sub_Int) 0ii;

  Int_High_Const = (Integer) 100ii;
}

procedure foo (
        Integer a,
        Day dayVar) {

}package Standard;


typealias Boolean Boolean;

typealias Integer Integer;

typealias Integer Natural;

typealias Integer Positive;

typealias Float Float;

typealias universal_integer universal_integer;

typealias universal_real universal_real;

typealias Character Character;

typealias String String;