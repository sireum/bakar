package Function_Simple;


global Integer @@B;

procedure $$binit {

  #l1.
    Y := 1ii;

  #l2.
    @@B := 0ii;

  #l3.
    C := 0ii;

  #l4.
    return;
}

procedure Integer F1 (
        Integer X,
        Integer Z) {
  local
    FIXME _t0;
    FIXME _t1;
    FIXME _t2;
    FIXME _t3;


  #rwl0.
    _t0 := X;

  #rwl1.
    _t1 := Z;

  #rwl2.
    _t2 := _t0 + _t1;

  #rwl3.
    _t3 := Y;

  #l5.
    return _t2 + _t3;
}

procedure P1 (
        Integer M,
        Integer N) {
  local
    FIXME _tcomp0;


  #l6.
    call _tcomp0 := F1 (M, N);

  #l7.
    @@B := _tcomp0;

  #l8.
    return;
}

procedure P2 (
        Integer M,
        Integer N) {
  local
    FIXME _tcomp1;
    FIXME _t4;
    FIXME _t5;


  #l9.
    call _tcomp1 := F1 (M, N);

  #rwl4.
    _t4 := _tcomp1;

  #rwl5.
    _t5 := C;

  #l10.
    @@B := _t4 + _t5;

  #l11.
    return;
}package Function_Simple;


global Integer @@Y;

global Integer @@C;

procedure Integer F1 (
        Integer X,
        Integer Z) {

}package Standard;


typealias Boolean standard::boolean;

typealias Integer standard::integer;

typealias Integer standard::natural;

typealias Integer standard::positive;

typealias Float standard::float;

typealias Integer universal_integer;

typealias Float universal_real;