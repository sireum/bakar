package BinaryExpressions;


typealias Boolean standard::boolean
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">standard::boolean</string>
         <string sid="2">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>""")
;

typealias Integer standard::integer
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">standard::integer</string>
         <string sid="2">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Integer-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Integer-1:1</string>""")
;

typealias Integer standard::natural
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">standard::natural</string>
         <string sid="2">ada://subtype/Standard-1:1/Natural-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://subtype/Standard-1:1/Natural-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://subtype/Standard-1:1/Natural-1:1</string>""")
;

typealias Integer standard::positive
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">standard::positive</string>
         <string sid="2">ada://subtype/Standard-1:1/Positive-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>""")
;

typealias Float standard::float
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string>standard::float</string>
         <string sid="1">ada://ordinary_type/Standard-1:1/Float-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Float-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Float-1:1</string>""")
;

typealias Integer universal_integer
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">universal_integer</string>
         <string sid="2">ada://ordinary_type/universal_integer</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://ordinary_type/universal_integer</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://ordinary_type/universal_integer</string>""")
;

procedure Integer X
    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>1</int>
         <int>1</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {

  #l1.
    return 1ii;
}

procedure Integer Add (
        Integer I
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Add+5:12/I+5:16</string>""")
        ,
        Integer J
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Add+5:12/J+5:19</string>""")
)
    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>1</int>
         <int>1</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {
  local
    Integer r0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r0+7:5</string>""")
    ;
    Integer r1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r1+7:9</string>""")
    ;
    Integer r2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r2+7:13</string>""")
    ;
    Integer r3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r3+7:17</string>""")
    ;
    Integer r4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r4+7:21</string>""")
    ;
    Integer r5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r5+7:25</string>""")
    ;
    Integer r6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r6+7:29</string>""")
    ;


  #rwl0.
    _t0 := 1ii;

  #rwl1.
    _t1 := 2ii;

  #l2.
    r0 := _t0 + _t1;

  #rwl2.
    _t2 := I;

  #rwl3.
    _t3 := 1ii;

  #l3.
    r1 := _t2 + _t3;

  #rwl4.
    _t4 := I;

  #rwl5.
    _t5 := J;

  #l4.
    r2 := _t4 + _t5;

  #rwl6.
    _t6 := I;

  #rwl7.
    _t7 := I;

  #l5.
    r3 := _t6 + _t7;

  #rwl8.
    _t8 := J;

  #rwl9.
    _t9 := J;

  #l6.
    r4 := _t8 + _t9;

  #rwl10.
    _t10 := J;

  #rwl11.
    _t11 := I;

  #l7.
    r5 := _t10 + _t11;

  #rwl12.
    _t12 := J;

  #rwl13.
    _t13 := 1ii;

  #l8.
    r6 := _t12 + _t13;

  #rwl14.
    _t14 := r2;

  #rwl15.
    _t15 := r5;

  #l9.
    assert _t14 == _t15;

  #l10.
    return r6;
}

procedure Integer Sub (
        Integer I
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Sub+20:12/I+20:16</string>""")
        ,
        Integer J
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Sub+20:12/J+20:19</string>""")
)
    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>1</int>
         <int>1</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {
  local
    Integer r0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r0+22:5</string>""")
    ;
    Integer r1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r1+22:9</string>""")
    ;
    Integer r2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r2+22:13</string>""")
    ;
    Integer r3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r3+22:17</string>""")
    ;
    Integer r4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r4+22:21</string>""")
    ;
    Integer r5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r5+22:25</string>""")
    ;
    Integer r6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r6+22:29</string>""")
    ;


  #rwl16.
    _t16 := 1ii;

  #rwl17.
    _t17 := 2ii;

  #l11.
    r0 := _t16 - _t17;

  #rwl18.
    _t18 := I;

  #rwl19.
    _t19 := 1ii;

  #l12.
    r1 := _t18 - _t19;

  #rwl20.
    _t20 := I;

  #rwl21.
    _t21 := J;

  #l13.
    r2 := _t20 - _t21;

  #rwl22.
    _t22 := I;

  #rwl23.
    _t23 := I;

  #l14.
    r3 := _t22 - _t23;

  #rwl24.
    _t24 := J;

  #rwl25.
    _t25 := J;

  #l15.
    r4 := _t24 - _t25;

  #rwl26.
    _t26 := J;

  #rwl27.
    _t27 := I;

  #l16.
    r5 := _t26 - _t27;

  #rwl28.
    _t28 := J;

  #rwl29.
    _t29 := 1ii;

  #l17.
    r6 := _t28 - _t29;

  #l18.
    return r6;
}

procedure Integer Mult (
        Integer I
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Mult+35:12/I+35:17</string>""")
        ,
        Integer J
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Mult+35:12/J+35:20</string>""")
)
    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>1</int>
         <int>1</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {
  local
    Integer r0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r0+37:5</string>""")
    ;
    Integer r1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r1+37:9</string>""")
    ;
    Integer r2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r2+37:13</string>""")
    ;
    Integer r3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r3+37:17</string>""")
    ;
    Integer r4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r4+37:21</string>""")
    ;
    Integer r5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r5+37:25</string>""")
    ;
    Integer r6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r6+37:29</string>""")
    ;


  #rwl30.
    _t30 := 1ii;

  #rwl31.
    _t31 := 2ii;

  #l19.
    r0 := _t30 * _t31;

  #rwl32.
    _t32 := I;

  #rwl33.
    _t33 := 1ii;

  #l20.
    r1 := _t32 * _t33;

  #rwl34.
    _t34 := I;

  #rwl35.
    _t35 := J;

  #l21.
    r2 := _t34 * _t35;

  #rwl36.
    _t36 := I;

  #rwl37.
    _t37 := I;

  #l22.
    r3 := _t36 * _t37;

  #rwl38.
    _t38 := J;

  #rwl39.
    _t39 := J;

  #l23.
    r4 := _t38 * _t39;

  #rwl40.
    _t40 := J;

  #rwl41.
    _t41 := I;

  #l24.
    r5 := _t40 * _t41;

  #rwl42.
    _t42 := J;

  #rwl43.
    _t43 := 1ii;

  #l25.
    r6 := _t42 * _t43;

  #rwl44.
    _t44 := r2;

  #rwl45.
    _t45 := r5;

  #l26.
    assert _t44 == _t45;

  #l27.
    return r6;
}

procedure Integer Division (
        Integer I
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Division+50:12/I+50:21</string>""")
        ,
        Integer J
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Division+50:12/J+50:24</string>""")
)
    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>1</int>
         <int>1</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {
  local
    Integer r0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r0+52:5</string>""")
    ;
    Integer r1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r1+52:9</string>""")
    ;
    Integer r2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r2+52:13</string>""")
    ;
    Integer r3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r3+52:17</string>""")
    ;
    Integer r4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r4+52:21</string>""")
    ;
    Integer r5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r5+52:25</string>""")
    ;
    Integer r6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r6+52:29</string>""")
    ;


  #rwl46.
    _t46 := 1ii;

  #rwl47.
    _t47 := 2ii;

  #l28.
    r0 := _t46 / _t47;

  #rwl48.
    _t48 := I;

  #rwl49.
    _t49 := 1ii;

  #l29.
    r1 := _t48 / _t49;

  #rwl50.
    _t50 := I;

  #rwl51.
    _t51 := I;

  #l30.
    r2 := _t50 / _t51;

  #rwl52.
    _t52 := I;

  #rwl53.
    _t53 := J;

  #l31.
    r3 := _t52 / _t53;

  #rwl54.
    _t54 := J;

  #rwl55.
    _t55 := I;

  #l32.
    r4 := _t54 / _t55;

  #rwl56.
    _t56 := J;

  #rwl57.
    _t57 := J;

  #l33.
    r5 := _t56 / _t57;

  #rwl58.
    _t58 := J;

  #rwl59.
    _t59 := 1ii;

  #l34.
    r6 := _t58 / _t59;

  #l35.
    return r6;
}