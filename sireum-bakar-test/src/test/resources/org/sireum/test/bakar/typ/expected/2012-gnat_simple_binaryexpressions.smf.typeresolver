ada://variable_temp/BinaryExpressions/Mult/_t37 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t11 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t41 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Mult+35:12/r4+37:21 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t39 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Sub+20:12/r4+22:21 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t54 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t59 -> ada://ordinary_type/universal_integer
ada://variable/BinaryExpressions-1:9/Sub+20:12/r3+22:17 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t16 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Division/_t48 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t0 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Mult/_t44 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Sub+20:12/r6+22:29 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t23 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Add+5:12/r5+7:25 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t9 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Sub+20:12/r1+22:9 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t15 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t27 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t20 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t36 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t25 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t26 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t10 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t8 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Mult+35:12/r3+37:17 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Mult+35:12/r0+37:5 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t2 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t33 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Sub/_t19 -> ada://ordinary_type/universal_integer
ada://variable/BinaryExpressions-1:9/Division+50:12/r4+52:21 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t1 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Division/_t53 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t40 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://parameter/BinaryExpressions-1:9/Mult+35:12/I+35:17 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Add+5:12/r0+7:5 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Add+5:12/r2+7:13 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Division+50:12/r5+52:25 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t5 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t57 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://parameter/BinaryExpressions-1:9/Add+5:12/I+5:16 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Division+50:12/r3+52:17 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t24 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t49 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Mult/_t32 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t14 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t46 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Division/_t50 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t30 -> ada://ordinary_type/universal_integer
ada://parameter/BinaryExpressions-1:9/Sub+20:12/I+20:16 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t3 -> ada://ordinary_type/universal_integer
ada://variable/BinaryExpressions-1:9/Division+50:12/r2+52:13 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Sub+20:12/r0+22:5 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t21 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t35 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t45 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Add+5:12/r1+7:9 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t52 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t13 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Mult/_t38 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Division+50:12/r0+52:5 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t18 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t56 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t42 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Division+50:12/r6+52:29 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t29 -> ada://ordinary_type/universal_integer
ada://parameter/BinaryExpressions-1:9/Division+50:12/J+50:24 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://parameter/BinaryExpressions-1:9/Sub+20:12/J+20:19 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Mult+35:12/r2+37:13 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Sub+20:12/r2+22:13 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t51 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t31 -> ada://ordinary_type/universal_integer
ada://parameter/BinaryExpressions-1:9/Mult+35:12/J+35:20 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Mult+35:12/r6+37:29 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Mult+35:12/r1+37:9 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://parameter/BinaryExpressions-1:9/Division+50:12/I+50:21 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Mult+35:12/r5+37:25 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t58 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t4 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Add+5:12/r6+7:29 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t47 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Add/_t6 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Sub+20:12/r5+22:25 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Division+50:12/r1+52:9 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t22 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Add/_t12 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t34 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Add+5:12/r3+7:17 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Sub/_t28 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://parameter/BinaryExpressions-1:9/Add+5:12/J+5:19 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable/BinaryExpressions-1:9/Add+5:12/r4+7:21 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Mult/_t43 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Sub/_t17 -> ada://ordinary_type/universal_integer
ada://variable_temp/BinaryExpressions/Add/_t7 -> ada://ordinary_type/Standard-1:1/Integer-1:1
ada://variable_temp/BinaryExpressions/Division/_t55 -> ada://ordinary_type/Standard-1:1/Integer-1:1
package BinaryExpressions;


typealias Boolean standard::boolean
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">standard::boolean</string>
         <string sid="2">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>""")
;

typealias Integer standard::integer
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">standard::integer</string>
         <string sid="2">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Integer-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Integer-1:1</string>""")
;

typealias Integer standard::natural
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">standard::natural</string>
         <string sid="2">ada://subtype/Standard-1:1/Natural-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://subtype/Standard-1:1/Natural-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://subtype/Standard-1:1/Natural-1:1</string>""")
;

typealias Integer standard::positive
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">standard::positive</string>
         <string sid="2">ada://subtype/Standard-1:1/Positive-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>""")
;

typealias Float standard::float
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string>standard::float</string>
         <string sid="1">ada://ordinary_type/Standard-1:1/Float-1:1</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Float-1:1</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://ordinary_type/Standard-1:1/Float-1:1</string>""")
;

typealias Integer universal_integer
    @BAKAR_TYPE_DEF

      ("""<org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
         <string sid="1">universal_integer</string>
         <string sid="2">ada://ordinary_type/universal_integer</string>
         <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
           <string>myint</string>
           <none/>
           <none/>
         </org.sireum.bakar.symbol.SignedIntegerTypeDef>
       </org.sireum.bakar.symbol.FullTypeDecl>""")

    @BAKAR_TYPE_URI

      ("""<string sid="1">ada://ordinary_type/universal_integer</string>""")

    @BAKAR_REF_URI

      ("""<string sid="1">ada://ordinary_type/universal_integer</string>""")
;

procedure Integer X
    @BAKAR_REF_URI

      ("""<string sid="1">ada://function_body/BinaryExpressions-1:9/X-4:12</string>""")

    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>3</int>
         <int>3</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {

  #l1.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>0</int>""")
  >
    return 1ii;
}

procedure Integer Add (
        Integer I
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Add+5:12/I+5:16</string>""")

            @BAKAR_PARAM_INFO

              ("""<org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>
                 <__paramMode>IN</__paramMode>
               </org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>""")
        ,
        Integer J
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Add+5:12/J+5:19</string>""")

            @BAKAR_PARAM_INFO

              ("""<org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>
                 <__paramMode>IN</__paramMode>
               </org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>""")
)
    @BAKAR_REF_URI

      ("""<string sid="1">ada://function_body/BinaryExpressions-1:9/Add+5:12</string>""")

    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>5</int>
         <int>3</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {
  local
    Integer r0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r0+7:5</string>""")
    ;
    Integer r1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r1+7:9</string>""")
    ;
    Integer r2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r2+7:13</string>""")
    ;
    Integer r3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r3+7:17</string>""")
    ;
    Integer r4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r4+7:21</string>""")
    ;
    Integer r5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r5+7:25</string>""")
    ;
    Integer r6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Add+5:12/r6+7:29</string>""")
    ;
    FIXME _t0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t0</string>""")
    ;
    FIXME _t1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t1</string>""")
    ;
    FIXME _t2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t2</string>""")
    ;
    FIXME _t3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t3</string>""")
    ;
    FIXME _t4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t4</string>""")
    ;
    FIXME _t5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t5</string>""")
    ;
    FIXME _t6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t6</string>""")
    ;
    FIXME _t7
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t7</string>""")
    ;
    FIXME _t8
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t8</string>""")
    ;
    FIXME _t9
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t9</string>""")
    ;
    FIXME _t10
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t10</string>""")
    ;
    FIXME _t11
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t11</string>""")
    ;
    FIXME _t12
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t12</string>""")
    ;
    FIXME _t13
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t13</string>""")
    ;
    FIXME _t14
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t14</string>""")
    ;
    FIXME _t15
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Add/_t15</string>""")
    ;


  #rwl0.
    _t0 := 1ii;

  #rwl1.
    _t1 := 2ii;

  #l2.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>0</int>""")
  >
    r0 := _t0 + _t1;

  #rwl2.
    _t2 := I;

  #rwl3.
    _t3 := 1ii;

  #l3.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>1</int>""")
  >
    r1 := _t2 + _t3;

  #rwl4.
    _t4 := I;

  #rwl5.
    _t5 := J;

  #l4.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>2</int>""")
  >
    r2 := _t4 + _t5;

  #rwl6.
    _t6 := I;

  #rwl7.
    _t7 := I;

  #l5.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>3</int>""")
  >
    r3 := _t6 + _t7;

  #rwl8.
    _t8 := J;

  #rwl9.
    _t9 := J;

  #l6.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>4</int>""")
  >
    r4 := _t8 + _t9;

  #rwl10.
    _t10 := J;

  #rwl11.
    _t11 := I;

  #l7.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>5</int>""")
  >
    r5 := _t10 + _t11;

  #rwl12.
    _t12 := J;

  #rwl13.
    _t13 := 1ii;

  #l8.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>6</int>""")
  >
    r6 := _t12 + _t13;

  #rwl14.
    _t14 := r2;

  #rwl15.
    _t15 := r5;

  #l9.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>7</int>""")
  >
    assert _t14 == _t15;

  #l10.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>8</int>""")
  >
    return r6;
}

procedure Integer Sub (
        Integer I
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Sub+20:12/I+20:16</string>""")

            @BAKAR_PARAM_INFO

              ("""<org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>
                 <__paramMode>IN</__paramMode>
               </org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>""")
        ,
        Integer J
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Sub+20:12/J+20:19</string>""")

            @BAKAR_PARAM_INFO

              ("""<org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>
                 <__paramMode>IN</__paramMode>
               </org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>""")
)
    @BAKAR_REF_URI

      ("""<string sid="1">ada://function_body/BinaryExpressions-1:9/Sub+20:12</string>""")

    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>20</int>
         <int>3</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {
  local
    Integer r0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r0+22:5</string>""")
    ;
    Integer r1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r1+22:9</string>""")
    ;
    Integer r2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r2+22:13</string>""")
    ;
    Integer r3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r3+22:17</string>""")
    ;
    Integer r4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r4+22:21</string>""")
    ;
    Integer r5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r5+22:25</string>""")
    ;
    Integer r6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Sub+20:12/r6+22:29</string>""")
    ;
    FIXME _t16
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t16</string>""")
    ;
    FIXME _t17
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t17</string>""")
    ;
    FIXME _t18
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t18</string>""")
    ;
    FIXME _t19
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t19</string>""")
    ;
    FIXME _t20
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t20</string>""")
    ;
    FIXME _t21
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t21</string>""")
    ;
    FIXME _t22
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t22</string>""")
    ;
    FIXME _t23
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t23</string>""")
    ;
    FIXME _t24
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t24</string>""")
    ;
    FIXME _t25
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t25</string>""")
    ;
    FIXME _t26
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t26</string>""")
    ;
    FIXME _t27
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t27</string>""")
    ;
    FIXME _t28
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t28</string>""")
    ;
    FIXME _t29
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Sub/_t29</string>""")
    ;


  #rwl16.
    _t16 := 1ii;

  #rwl17.
    _t17 := 2ii;

  #l11.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>0</int>""")
  >
    r0 := _t16 - _t17;

  #rwl18.
    _t18 := I;

  #rwl19.
    _t19 := 1ii;

  #l12.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>1</int>""")
  >
    r1 := _t18 - _t19;

  #rwl20.
    _t20 := I;

  #rwl21.
    _t21 := J;

  #l13.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>2</int>""")
  >
    r2 := _t20 - _t21;

  #rwl22.
    _t22 := I;

  #rwl23.
    _t23 := I;

  #l14.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>3</int>""")
  >
    r3 := _t22 - _t23;

  #rwl24.
    _t24 := J;

  #rwl25.
    _t25 := J;

  #l15.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>4</int>""")
  >
    r4 := _t24 - _t25;

  #rwl26.
    _t26 := J;

  #rwl27.
    _t27 := I;

  #l16.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>5</int>""")
  >
    r5 := _t26 - _t27;

  #rwl28.
    _t28 := J;

  #rwl29.
    _t29 := 1ii;

  #l17.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>6</int>""")
  >
    r6 := _t28 - _t29;

  #l18.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>7</int>""")
  >
    return r6;
}

procedure Integer Mult (
        Integer I
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Mult+35:12/I+35:17</string>""")

            @BAKAR_PARAM_INFO

              ("""<org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>
                 <__paramMode>IN</__paramMode>
               </org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>""")
        ,
        Integer J
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Mult+35:12/J+35:20</string>""")

            @BAKAR_PARAM_INFO

              ("""<org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>
                 <__paramMode>IN</__paramMode>
               </org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>""")
)
    @BAKAR_REF_URI

      ("""<string sid="1">ada://function_body/BinaryExpressions-1:9/Mult+35:12</string>""")

    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>35</int>
         <int>3</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {
  local
    Integer r0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r0+37:5</string>""")
    ;
    Integer r1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r1+37:9</string>""")
    ;
    Integer r2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r2+37:13</string>""")
    ;
    Integer r3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r3+37:17</string>""")
    ;
    Integer r4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r4+37:21</string>""")
    ;
    Integer r5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r5+37:25</string>""")
    ;
    Integer r6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Mult+35:12/r6+37:29</string>""")
    ;
    FIXME _t30
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t30</string>""")
    ;
    FIXME _t31
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t31</string>""")
    ;
    FIXME _t32
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t32</string>""")
    ;
    FIXME _t33
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t33</string>""")
    ;
    FIXME _t34
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t34</string>""")
    ;
    FIXME _t35
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t35</string>""")
    ;
    FIXME _t36
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t36</string>""")
    ;
    FIXME _t37
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t37</string>""")
    ;
    FIXME _t38
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t38</string>""")
    ;
    FIXME _t39
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t39</string>""")
    ;
    FIXME _t40
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t40</string>""")
    ;
    FIXME _t41
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t41</string>""")
    ;
    FIXME _t42
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t42</string>""")
    ;
    FIXME _t43
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t43</string>""")
    ;
    FIXME _t44
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t44</string>""")
    ;
    FIXME _t45
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Mult/_t45</string>""")
    ;


  #rwl30.
    _t30 := 1ii;

  #rwl31.
    _t31 := 2ii;

  #l19.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>0</int>""")
  >
    r0 := _t30 * _t31;

  #rwl32.
    _t32 := I;

  #rwl33.
    _t33 := 1ii;

  #l20.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>1</int>""")
  >
    r1 := _t32 * _t33;

  #rwl34.
    _t34 := I;

  #rwl35.
    _t35 := J;

  #l21.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>2</int>""")
  >
    r2 := _t34 * _t35;

  #rwl36.
    _t36 := I;

  #rwl37.
    _t37 := I;

  #l22.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>3</int>""")
  >
    r3 := _t36 * _t37;

  #rwl38.
    _t38 := J;

  #rwl39.
    _t39 := J;

  #l23.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>4</int>""")
  >
    r4 := _t38 * _t39;

  #rwl40.
    _t40 := J;

  #rwl41.
    _t41 := I;

  #l24.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>5</int>""")
  >
    r5 := _t40 * _t41;

  #rwl42.
    _t42 := J;

  #rwl43.
    _t43 := 1ii;

  #l25.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>6</int>""")
  >
    r6 := _t42 * _t43;

  #rwl44.
    _t44 := r2;

  #rwl45.
    _t45 := r5;

  #l26.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>7</int>""")
  >
    assert _t44 == _t45;

  #l27.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>8</int>""")
  >
    return r6;
}

procedure Integer Division (
        Integer I
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Division+50:12/I+50:21</string>""")

            @BAKAR_PARAM_INFO

              ("""<org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>
                 <__paramMode>IN</__paramMode>
               </org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>""")
        ,
        Integer J
            @BAKAR_REF_URI

              ("""<string sid="1">ada://parameter/BinaryExpressions-1:9/Division+50:12/J+50:24</string>""")

            @BAKAR_PARAM_INFO

              ("""<org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>
                 <__paramMode>IN</__paramMode>
               </org.sireum.bakar.symbol.BakarSymbol_-_-anonfun_-pd2pi_-1_-_-anon_-1>""")
)
    @BAKAR_REF_URI

      ("""<string sid="1">ada://function_body/BinaryExpressions-1:9/Division+50:12</string>""")

    @util.loc

      ("""<org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl cid="1" size="2">
         <int>50</int>
         <int>3</int>
       </org.sireum.util.LineColumnLocation_-LineColumnLocationWithAtImpl>""")

    @BAKAR_TYPE_MAP

      ("""<mcol.HashMap mtype="mmap">
         <entry>
           <string sid="1">ada://subtype/Standard-1:1/Positive-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="1" size="3">
             <string sid="2">standard::positive</string>
             <string srefid="1"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="2" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="3">ada://ordinary_type/universal_integer</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="3" size="3">
             <string sid="4">universal_integer</string>
             <string srefid="3"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="4" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="5">ada://ordinary_type/Standard-1:1/Integer-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="5" size="3">
             <string sid="6">standard::integer</string>
             <string srefid="5"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="6" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="7">ada://ordinary_type/Standard-1:1/Float-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="7" size="3">
             <string>standard::float</string>
             <string srefid="7"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="8" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="8">ada://subtype/Standard-1:1/Natural-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="9" size="3">
             <string sid="9">standard::natural</string>
             <string srefid="8"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="10" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
         <entry>
           <string sid="10">ada://ordinary_type/Standard-1:1/Boolean-1:1</string>
           <org.sireum.bakar.symbol.FullTypeDecl cid="11" size="3">
             <string sid="11">standard::boolean</string>
             <string srefid="10"/>
             <org.sireum.bakar.symbol.SignedIntegerTypeDef cid="12" size="3">
               <string>myint</string>
               <none/>
               <none/>
             </org.sireum.bakar.symbol.SignedIntegerTypeDef>
           </org.sireum.bakar.symbol.FullTypeDecl>
         </entry>
       </mcol.HashMap>""")
 {
  local
    Integer r0
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r0+52:5</string>""")
    ;
    Integer r1
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r1+52:9</string>""")
    ;
    Integer r2
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r2+52:13</string>""")
    ;
    Integer r3
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r3+52:17</string>""")
    ;
    Integer r4
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r4+52:21</string>""")
    ;
    Integer r5
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r5+52:25</string>""")
    ;
    Integer r6
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable/BinaryExpressions-1:9/Division+50:12/r6+52:29</string>""")
    ;
    FIXME _t46
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t46</string>""")
    ;
    FIXME _t47
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t47</string>""")
    ;
    FIXME _t48
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t48</string>""")
    ;
    FIXME _t49
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t49</string>""")
    ;
    FIXME _t50
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t50</string>""")
    ;
    FIXME _t51
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t51</string>""")
    ;
    FIXME _t52
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t52</string>""")
    ;
    FIXME _t53
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t53</string>""")
    ;
    FIXME _t54
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t54</string>""")
    ;
    FIXME _t55
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t55</string>""")
    ;
    FIXME _t56
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t56</string>""")
    ;
    FIXME _t57
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t57</string>""")
    ;
    FIXME _t58
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t58</string>""")
    ;
    FIXME _t59
        @BAKAR_REF_URI

          ("""<string sid="1">ada://variable_temp/BinaryExpressions/Division/_t59</string>""")
    ;


  #rwl46.
    _t46 := 1ii;

  #rwl47.
    _t47 := 2ii;

  #l28.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>0</int>""")
  >
    r0 := _t46 / _t47;

  #rwl48.
    _t48 := I;

  #rwl49.
    _t49 := 1ii;

  #l29.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>1</int>""")
  >
    r1 := _t48 / _t49;

  #rwl50.
    _t50 := I;

  #rwl51.
    _t51 := I;

  #l30.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>2</int>""")
  >
    r2 := _t50 / _t51;

  #rwl52.
    _t52 := I;

  #rwl53.
    _t53 := J;

  #l31.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>3</int>""")
  >
    r3 := _t52 / _t53;

  #rwl54.
    _t54 := J;

  #rwl55.
    _t55 := I;

  #l32.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>4</int>""")
  >
    r4 := _t54 / _t55;

  #rwl56.
    _t56 := J;

  #rwl57.
    _t57 := J;

  #l33.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>5</int>""")
  >
    r5 := _t56 / _t57;

  #rwl58.
    _t58 := J;

  #rwl59.
    _t59 := 1ii;

  #l34.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>6</int>""")
  >
    r6 := _t58 / _t59;

  #l35.<
      @org.sireum.pilar.ast.LocationDecl

        ("""<int>7</int>""")
  >
    return r6;
}