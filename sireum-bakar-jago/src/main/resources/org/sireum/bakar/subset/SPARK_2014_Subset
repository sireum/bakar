/************************************************************************************
  * From: Jerome Guitton <guitton@adacore.com>
  * Date: Thu, Dec 20, 2012 at 8:24 AM
  * Subject: Re: [Spark2014-discuss] [L621-012] formal semantics of SPARK 2014
  * To: spark2014-discuss@lists.forge.open-do.org
************************************************************************************/

We have converged on the following subset. Here I'll just give an
informal list of the features that this subset would contain,
following the structure of the two reference manuals (Ada 2012 and
SPARK 2014):

2. Lexical elements:

- identifiers (2.3), obviously
- for literals: only integer literals (2.4)

3. Declarations and types:

- No type declarations; only two types for now:
- Boolean (3.5.3)
- Integer (3.5.4 (11))
(One would also need universal_integer (3.4.1 6/2); as there would be no
 derivation in the minimal subset, it may be identified to Integer for
 the moment)
- Only object declarations (3.3.1 (5/2)), not aliased,
 with only one defining identifier in the defining_identifier_list
 (although that does not make a difference at the AST level)

4. Names and expressions:

- for literals (4.2): only integer literals
- operators: non-short-circuit logical (4.5.1), relational (4.5.2),
 adding (4.5.3, 4.5.4), multiplying (4.5.5) operators
- mod, rem and exponentiation are not included.

5. Statements:

- Assignments (5.2)
- if statements (5.3) without else / elsif
- while loops only (5.5 (8)) with no exit statements
- Loop invariants (SPARK RM 5.5.3)

6. Subprograms:

- Only procedure bodies (6.1-6.3) that are the initial declaration of
 the subprogram (and not the completion: leaving "explicit" declarations
 out of the subset for now)
- Only IN and OUT parameters, no IN OUT (6.2)
- Pre and Post aspect (6.1.1. (2/3) and (4/3))

Note that a subprogram unit has an implicit spec unit, so it can be
mentioned in a with-clause. Again, of no interest at AST level.

7. Packages:

Out for the first subset; meaning that only subprograms would be
allowed as compilation units.

8. Visibility rules:

With the previous restriction, this chapter ends up becomes trivial.
